"use strict";

PULSE.app.templates['results-table.dv-matches-table'] = _.template("<table class=\"results-table__table results-table__table--brackets results-table__table--dv <%= newFormat ? 'results-table__table--dv--format' : '' %>\"> <thead> <tr class=\"results-table__header-row\"> <% if ( phaseName === 'Finals' ) { %> <th class=\"results-table__header-cell results-table__header-cell--small\">Rank</th> <% } %> <th class=\"results-table__header-cell results-table__header-cell--small u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--medium results-table__header-cell--athlete u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--age u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <% if ( phaseName === 'Semi finals' ) { %> <th class=\"results-table__header-cell results-table__header-cell--small\"> <%= PULSE.I18N.lookup( 'label.table.header.carriedPts' ) %> </th> <% } %> <th class=\"results-table__header-cell results-table__header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.points' ) %></th> <% if ( phaseName === 'Finals' ) { %> <th class=\"results-table__header-cell results-table__header-cell--points-behind\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind.abbr' ) %></th> <% } %> <th class=\"results-table__header-cell results-table__header-cell--open\"></th> </tr> </thead> <tbody class=\"<%= tableData.length <= 2 ? 'results-table--h2h' : '' %> results-table--<%= phaseName.replace(' ', '-') %>\"> <% if ( tableData.length ) { %> <% _.each( tableData, function( result, index ) { %> <% \n                    const showMedal = result.Rank === 1 || result.Rank === 2 || result.Rank === 3 ? true : false;\n                    let medalType = 'g';\n                    if ( result.Rank === 2 ) { \n                        medalType = 's';\n                    } else if ( result.Rank === 3 ) {\n                        medalType = 'b';\n                    }\n                %> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row <%= result.Qualified === 'Q' ? 'results-table__row--qualified' : '' %> <%= index === tableData.length - 1 ? 'results-table__row--last' : '' %>\"> <% if ( phaseName === 'Finals' ) { %> <td class=\"results-table__cell <%= showMedal ? 'results-table__cell--' + medalType : '' %> bold\"> <%= result.Rank %> <% if ( showMedal ) { %> <%= render( {\n                                    cssClass: 'results-table__medal u-hide-tablet',\n                                    name: 'medal'\n                                }, 'common.render-svg' ) %> <% } %> </td> <% } %> <td class=\"results-table__cell u-text-left\"> <div class=\"results-table__country\"> <%= render( {\n                                cssClass: 'results-table__country-flag',\n                                countryCode: result.NAT\n                            }, 'common.flag' ) %> <%= result.NAT %> </div> </td> <td class=\"results-table__cell u-text-left\"> <a class=\"results-table__athlete-link results-table__athlete-link--multiple\" href=\"<%= result.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <%= render( {\n                                    cssClass: 'results-table__athlete-image',\n                                    id: result.ResultId,\n                                    size: 'TABLE',\n                                    objectFit: true\n                                }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                        cssClass: 'results-table__athlete-arrow',\n                                        name: 'arrow-forward'\n                                    }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= result.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= result.LastName %> </span> <span class=\"results-table__athlete-rank\"> <%= result.BracketSeedGroup ? '('+result.BracketSeedGroup+')' : '' %> </span> </div> </a> </td> <td class=\"results-table__cell u-text-left u-hide-tablet\"> <%= result.AthleteResultAge ? result.AthleteResultAge : '-' %> </td> <% if ( phaseName === 'Semi finals' ) { %> <td class=\"results-table__cell\"> <%= result.CarryOverPoints %> </td> <% } %> <% if ( result.ScoringAbbr ) { %> <td class=\"results-table__cell\"> <%= result.ScoringAbbr %> </td> <% } else if ( result.TotalPoints ) { %> <td class=\"results-table__cell results-table__cell--highlight black\"> <%= result.TotalPoints %> </td> <% } else { %> <td class=\"results-table__cell\"> - </td> <% } %> <% if ( phaseName === 'Finals' ) { %> <td class=\"results-table__cell <%= phaseName === 'Finals' ? '' : 'u-hide' %>\"> <%= result.PointsBehind ? result.PointsBehind : '-' %> </td> <% } %> <td class=\"results-table__cell results-table__cell--no-padding results-table__cell--open-stats\"> <button class=\"results-table__expand-btn js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> </td> </tr> <% if ( result.Dives && result.Dives.length ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"7\"> <table class=\"results-table__sub-table\"> <thead> <tr class=\"results-table__sub-header-row\"> <% if ( tableData.Is3m10mTeam ) { %> <th class=\"results-table__sub-header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.round' ) %></th> <% } %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--dive results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.dive' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.diveNumber.abbr' ) %></th> <% if ( result.Competitors && result.Competitors.length && result.Dives[0].Competitor != null ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--dd u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--extra-spacing u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diver' ) %></th> <% } else { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small results-table__sub-header-cell--extra-spacing u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-show-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <% } %> <% _.each( result.Dives[0].JudgesScores, function( judge, index ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small <%= index === result.Dives[0].JudgesScores.length - 1 ? 'results-table__sub-header-cell--extra-spacing results-table__sub-header-cell--extra-padding u-text-left' : 'results-table__sub-header-cell--judge' %>\"><%= judge.Type %></th> <% } ); %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-hide-tablet\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints' ) %></span> <span class=\"u-show-tablet u-hide-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints.abbr' ) %></span> <span class=\"u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints.short' ) %></span> </th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-hide-tablet\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints' ) %></span> <span class=\"u-show-tablet u-hide-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints.abbr' ) %></span> <span class=\"u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints.short' ) %></span> </th> </tr> </thead> <tbody> <% _.each( result.Dives, function( dive, index ) { %> <tr class=\"results-table__sub-row <%= index === result.Dives.length - 1 ? 'results-table__sub-row--last' : '' %>\"> <% if ( tableData.Is3m10mTeam ) { %> <td class=\"results-table__sub-cell\"><%= dive.DiveRound !== null ? dive.DiveRound : '-' %></td> <% } %> <td class=\"results-table__sub-cell results-table__sub-cell--dive\"><%= dive.DiveOrder !== null ? dive.DiveOrder : '-' %></td> <td class=\"results-table__sub-cell\"><%= dive.DiveNo !== null ? dive.DiveNo : '-' %></td> <td class=\"results-table__sub-cell u-text-left\"><%= dive.DD !== null ? dive.DD : '-' %></td> <% if ( dive.Competitor ) { %> <td class=\"results-table__sub-cell u-text-left u-hide-tablet\"> <%= dive.FirstName %> <strong class=\"black\"><%= dive.LastName %></strong> </td> <% } %> <% _.each( dive.JudgesScores, function( score, index ) { %> <td class=\"results-table__sub-cell <%= index === dive.JudgesScores.length - 1 ? 'u-text-left' : '' %> <%= score.Score === '10.0' ? 'black' : '' %>\"><%= score.Score !== null ? score.Score : '-' %></td> <% } ); %> <td class=\"results-table__sub-cell u-hide-tablet\"><%= dive.DivePoints !== null ? dive.DivePoints : '-' %></td> <td class=\"results-table__sub-cell black u-hide-tablet\"><%= dive.TotalPoints !== null ? dive.TotalPoints : '-' %></td> <% if ( tableData.Is3m10mTeam ) { %> <td class=\"results-table__sub-cell u-hide-tablet\"><%= dive.RoundPoints !== null ? dive.RoundPoints : '-' %></td> <% } %> </tr> <% } ); %> </tbody> </table> </td> </tr> <% } %> <% } ); %> <% } else { %> <% if ( tableData.Results && tableData.Results.length ) { %> <% _.each( tableData.Results, function( result, index ) { %> <% \n                        const showMedal = result.Rank === 1 || result.Rank === 2 || result.Rank === 3 ? true : false;\n                        let medalType = 'g';\n                        if ( result.Rank === 2 ) { \n                            medalType = 's';\n                        } else if ( result.Rank === 3 ) {\n                            medalType = 'b';\n                        }\n                    %> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row <%= result.HeatRank === 1 || result.HeatRank === 2 || result.HeatRank === 3 ? 'results-table__row--qualified' : '' %>\"> <td class=\"results-table__cell <%= showMedal ? 'results-table__cell--' + medalType : '' %> bold\"> <%= result.Rank %> <% if ( showMedal ) { %> <%= render( {\n                                    cssClass: 'results-table__medal u-hide-tablet',\n                                    name: 'medal'\n                                }, 'common.render-svg' ) %> <% } %> </td> <td class=\"results-table__cell u-text-left\"> <div class=\"results-table__country\"> <%= render( {\n                                    cssClass: 'results-table__country-flag',\n                                    countryCode: result.NAT\n                                }, 'common.flag' ) %> <%= result.NAT %> </div> </td> <td class=\"results-table__cell u-text-left\"> <% if ( result.Competitors && result.Competitors.length > 1 ) { %> <% _.each( result.Competitors, function( competitor, index ) { %> <a class=\"results-table__athlete-link results-table__athlete-link--multiple\" href=\"<%= competitor.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <%= render( {\n                                                cssClass: 'results-table__athlete-image',\n                                                id: competitor.ResultId,\n                                                size: 'TABLE',\n                                                objectFit: true\n                                            }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                    cssClass: 'results-table__athlete-arrow',\n                                                    name: 'arrow-forward'\n                                                }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= competitor.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= competitor.LastName %> </span> <span class=\"results-table__athlete-rank\"> <%= competitor.BracketSeedGroup ? '('+competitor.BracketSeedGroup+')' : '' %> </span> </div> </a> <% } ); %> <% } else { %> <a class=\"results-table__athlete-link results-table__athlete-link--multiple\" href=\"<%= result.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <%= render( {\n                                            cssClass: 'results-table__athlete-image',\n                                            id: result.ResultId,\n                                            size: 'TABLE',\n                                            objectFit: true\n                                        }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                cssClass: 'results-table__athlete-arrow',\n                                                name: 'arrow-forward'\n                                            }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= result.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= result.LastName %> </span> <span class=\"results-table__athlete-rank\"> <%= result.BracketSeedGroup ? '('+result.BracketSeedGroup+')' : '' %> </span> </div> </a> <% } %> </td> <% if ( result.Competitors && result.Competitors.length > 1 ) { %> <td class=\"results-table__cell results-table__cell--no-padding u-text-left u-hide-tablet\"> <% _.each( result.Competitors, function( competitor, index ) { %> <span class=\"results-table__athlete-age\"> <%= competitor.AthleteResultAge ? competitor.AthleteResultAge : '-' %> </span> <% } ); %> </td> <% } else { %> <td class=\"results-table__cell u-text-left u-hide-tablet\"> <%= result.AthleteResultAge ? result.AthleteResultAge : '-' %> </td> <% } %> <% if ( result.ScoringAbbr ) { %> <td class=\"results-table__cell\"> <%= result.ScoringAbbr %> </td> <% } else if ( result.TotalPoints ) { %> <td class=\"results-table__cell results-table__cell--highlight black\"> <% if ( result.Qualified && result.Qualified === 'Q' ) { %> <span class=\"results-table__qualified\"><%= PULSE.I18N.lookup( 'label.qualified' ) %></span> <% } %> <%= result.TotalPoints %> </td> <% } else { %> <td class=\"results-table__cell\"> - </td> <% } %> <td class=\"results-table__cell\"><%= result.PointsBehind ? result.PointsBehind : '-' %></td> <td class=\"results-table__cell results-table__cell--no-padding\"> <button class=\"results-table__expand-btn js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> </td> </tr> <% if ( result.Dives && result.Dives.length ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"7\"> <table class=\"results-table__sub-table\"> <thead> <tr class=\"results-table__sub-header-row\"> <% if ( tableData.Is3m10mTeam ) { %> <th class=\"results-table__sub-header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.round' ) %></th> <% } %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--dive results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.dive' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.diveNumber.abbr' ) %></th> <% if ( result.Competitors && result.Competitors.length && result.Dives[0].Competitor != null ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--dd u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--extra-spacing u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diver' ) %></th> <% } else { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small results-table__sub-header-cell--extra-spacing u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-show-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <% } %> <% _.each( result.Dives[0].JudgesScores, function( judge, index ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small <%= index === result.Dives[0].JudgesScores.length - 1 ? 'results-table__sub-header-cell--extra-spacing results-table__sub-header-cell--extra-padding u-text-left' : 'results-table__sub-header-cell--judge' %>\"><%= judge.Type %></th> <% } ); %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-hide-tablet\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints' ) %></span> <span class=\"u-show-tablet u-hide-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints.abbr' ) %></span> <span class=\"u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints.short' ) %></span> </th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-hide-tablet\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints' ) %></span> <span class=\"u-show-tablet u-hide-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints.abbr' ) %></span> <span class=\"u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints.short' ) %></span> </th> </tr> </thead> <tbody> <% _.each( result.Dives, function( dive, index ) { %> <tr class=\"results-table__sub-row <%= index === result.Dives.length - 1 ? 'results-table__sub-row--last' : '' %>\"> <% if ( tableData.Is3m10mTeam ) { %> <td class=\"results-table__sub-cell\"><%= dive.DiveRound !== null ? dive.DiveRound : '-' %></td> <% } %> <td class=\"results-table__sub-cell results-table__sub-cell--dive\"><%= dive.DiveOrder !== null ? dive.DiveOrder : '-' %></td> <td class=\"results-table__sub-cell\"><%= dive.DiveNo !== null ? dive.DiveNo : '-' %></td> <td class=\"results-table__sub-cell u-text-left\"><%= dive.DD !== null ? dive.DD : '-' %></td> <% if ( dive.Competitor ) { %> <td class=\"results-table__sub-cell u-text-left u-hide-tablet\"> <%= dive.FirstName %> <strong class=\"black\"><%= dive.LastName %></strong> </td> <% } %> <% _.each( dive.JudgesScores, function( score, index ) { %> <td class=\"results-table__sub-cell <%= index === dive.JudgesScores.length - 1 ? 'u-text-left' : '' %> <%= score.Score === '10.0' ? 'black' : '' %>\"><%= score.Score !== null ? score.Score : '-' %></td> <% } ); %> <td class=\"results-table__sub-cell u-hide-tablet\"><%= dive.DivePoints !== null ? dive.DivePoints : '-' %></td> <td class=\"results-table__sub-cell black u-hide-tablet\"><%= dive.TotalPoints !== null ? dive.TotalPoints : '-' %></td> <% if ( tableData.Is3m10mTeam ) { %> <td class=\"results-table__sub-cell u-hide-tablet\"><%= dive.RoundPoints !== null ? dive.RoundPoints : '-' %></td> <% } %> </tr> <% } ); %> </tbody> </table> </td> </tr> <% } %> <% } ); %> <% } %> <% } %> </tbody> </table>");
PULSE.app.templates['results-table.events'] = _.template("<% _.each( dataByDiscipline, function( discipline ) { %> <div class=\"schedule__day\"> <h2 class=\"schedule__day-title schedule__day-title--alt\"><%= PULSE.I18N.lookup( 'label.discipline.' + discipline.iconDisciplineName ) %></h2> <ol class=\"schedule__list\"> <% _.each( discipline.DisciplineList, function( event ) { %> <li class=\"schedule__item\"> <button class=\"results-table__event schedule__item-link js-results-event\" data-event-guid=\"<%= event.Id %>\" data-active=\"false\"> <div class=\"schedule__item-details\"> <div class=\"schedule__item-disc\"> <%= render( {\n                                    discipline: discipline.iconDisciplineName,\n                                    cssClass: 'schedule__item-disc-wrap'\n                                }, 'common.discipline-icon' ) %> </div> <div class=\"schedule__item-title-wrap\"> <h3 class=\"schedule__item-title\"><%= event.DisciplineName %></h3> </div> <% if ( event.isLive ) { %> <span class=\"schedule__item-live-tag\"> <%= PULSE.I18N.lookup( 'label.unit.live' ) %> </span> <% } %> </div> <%= render( {\n                            cssClass: 'schedule__item-expand',\n                            name: 'chevron-down'\n                        }, 'common.render-svg' ) %> </button> <div class=\"results-table__unit-selector-container js-results-unit-selector-container\"> <%= render( {\n                            cssClass: 'results-table__unit-selector-loader'\n                        }, 'common.loader-single' ) %> </div> <div class=\"results-table__tabs js-results-tabs u-hide\"> <ul class=\"results-table__tabs-list\"> <li class=\"results-table__tabs-item\"> <a href=\"#\" class=\"is-active js-results-tabs-btn\" data-tab=\"list-view\"> List View </a> </li> <li class=\"results-table__tabs-item\"> <a href=\"#\" class=\"js-results-tabs-btn\" data-tab=\"bracket-view\"> Bracket View </a> </li> </ul> </div> <div class=\"results-table__table-container js-results-table-container js-tabbed-element\" id=\"list-view\"></div> <div class=\"results-table__bracket-container js-results-bracket-container js-tabbed-element u-hide\" id=\"bracket-view\"></div> </li> <% } ); %> </ol> </div> <% } ); %>");
PULSE.app.templates['results-table.status-tag'] = _.template("<% if ( typeof status !== 'undefined' ) { %> <span class=\"status-tag status-tag--<%= status.toLowerCase().replace( /_/g, '-' ) %> <%= typeof cssClass !== 'undefined' ? cssClass : '' %>\"> <%= PULSE.I18N.lookup( 'label.result.' + status.toLowerCase().replace( / /g, '-' ) ) %> </span> <% } %> ");
PULSE.app.templates['results-table.table-brackets'] = _.template("<div class=\"results-table__bracket-round-list\"> <ul> <%_ .each(unitData, function(array, key) { %> <li> <a href=\"#\" class=\"js-round-nav-link <%= key === 'Preliminaries' ? 'is-active' : '' %>\" data-round-show=\"<%= unitData[key].Name %>\"> <% if ( unitData[key].Name === 'Finals' ) { %> Final <% } else { %> <% \n                            const phaseName = unitData[key].Name.includes( 'Semifinals' ) ? unitData[key].Name.replace( 'Semifinals', 'Semi Finals' ) : unitData[key].Name;\n                        %> <%= phaseName %> <% } %> </a> </li> <% }); %> </ul> </div> <div class=\"results-table__bracket-layout js-brackets-layout\"> <%_ .each(unitData, function(array, key) { %> <div class=\"results-table__bracket-round results-table__bracket-round--<%= unitData[key].Name %>\" id=\"<%= unitData[key].Name %>\"> <%_ .each(unitData[key].sortedResults, function(array, index) { %> <%_ .each(unitData[key].sortedResults[index], function(array, item) { %> <div class=\"results-table__bracket-match results-table__bracket-match--<%= item %>\"> <% \n                            const matchItem = unitData[key].sortedResults[index][item];\n                            const prefixName = unitData[key].Name === 'Semifinals' ? 'Group' : 'Pair';\n                        %> <% if ( unitData[key].Name === 'Finals' ) { %> <div class=\"results-table__parent-container\"> <p class=\"results-table__phase-text\"> <%= unitData[key].Name %> </p> </div> <% } else { %> <% \n                                const phaseName = unitData[key].Name.includes( 'Semifinals' ) ? unitData[key].Name.replace( 'Semifinals', 'Semi Finals' ) : unitData[key].Name;\n                            %> <div class=\"results-table__parent-container\"> <p class=\"results-table__phase-text\"> <%= phaseName %> - <%= prefixName %> <%= item %> </p> </div> <% } %> <table class=\"results-table__table results-table__table--dv results-table__table--dv--<%= unitData[key].Name %> is-active\"> <thead> <tr class=\"results-table__header-row\"> <th class=\"results-table__header-cell results-table__header-cell--small <%= unitData[key].Name === 'Finals' ? 'results-table__header-cell--rank u-text-left' : 'u-hide' %>\">Rank</th> <th class=\"results-table__header-cell <%= unitData[key].Name !== 'Finals' ? 'u-text-left' : '' %>\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__header-cell <%= unitData[key].Name === 'Semifinals' ? 'results-table__header-cell--carried-points' : 'u-hide' %>\"><%= PULSE.I18N.lookup( 'label.table.header.carriedPts' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--points\"><%= PULSE.I18N.lookup( 'label.table.header.points' ) %></th> <th class=\"results-table__header-cell <%= unitData[key].Name === 'Finals' ? 'results-table__header-cell--points-behind' : 'u-hide' %>\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind.abbr' ) %></th> </tr> </thead> <tbody> <% if ( matchItem && matchItem.length ) { %> <% _.each( matchItem, function( result, index ) { %> <tr class=\"results-table__row js-results-table-row <%= result.Qualified === 'Q' ? 'results-table__row--qualified' : '' %>\"> <td class=\"results-table__cell <%= result.MedalTag ? 'results-table__cell--' + result.MedalTag.toLowerCase() : '' %> <%= unitData[key].Name === 'Finals' ? 'u-text-left' : 'u-hide' %> bold\"> <%= result.Rank %> <% if ( result.MedalTag ) { %> <%= render( {\n                                                        cssClass: 'results-table__medal',\n                                                        name: 'medal'\n                                                    }, 'common.render-svg' ) %> <% } %> </td> <td class=\"results-table__cell results-table__cell--athlete u-text-left\"> <div class=\"results-table__country\"> <%= render( {\n                                                        cssClass: 'results-table__country-flag',\n                                                        countryCode: result.NAT\n                                                    }, 'common.flag' ) %> </div> <a class=\"results-table__athlete-link results-table__athlete-link--multiple\" href=\"<%= result.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <%= render( {\n                                                        cssClass: 'results-table__athlete-image',\n                                                        id: result.ResultId,\n                                                        size: 'TABLE',\n                                                        objectFit: true\n                                                    }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                            cssClass: 'results-table__athlete-arrow',\n                                                            name: 'arrow-forward'\n                                                        }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= result.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= result.LastName %> </span> <span class=\"results-table__athlete-rank\"> <%= result.BracketSeedGroup ? '('+result.BracketSeedGroup+')' : '' %> </span> </div> </a> </td> <td class=\"results-table__cell <%= unitData[key].Name === 'Semifinals' ? '' : 'u-hide' %>\"><%= result.CarryOverPoints ? result.CarryOverPoints : '-' %></td> <td class=\"results-table__cell results-table__cell--highlight u-text-center <%= result.Qualified === 'Q' ? 'black' : '' %>\"> <%= result.TotalPoints %> </td> <td class=\"results-table__cell <%= unitData[key].Name === 'Finals' ? '' : 'u-hide' %>\"><%= result.PointsBehind ? result.PointsBehind : '-' %></td> </tr> <% }); %> <% } %> </tbody> </table> </div> <% }); %> <% }); %> </div> <% }); %> </div>");
PULSE.app.templates['results-table.table-dv'] = _.template("<% if ( unitData.BracketFormat == true && unitData ) { %> <%_ .each(unitData.Results, function(array, key) { %> <% \n            const prefixName = unitData.Results[key].length > 2 ? 'Group' : 'Pair';\n            phaseName = unitData.Name.includes( 'finals' ) ? unitData.Name.replace( 'finals', ' finals' ) : unitData.Name;\n        %> <div class=\"results-table__parent-container\"> <p class=\"results-table__phase-text\"> <%= phaseName %><% if (phaseName !== 'Finals') { %> - <%= prefixName %> <%= key || '' %><% } %> </p> <%= render( {\n                tableData: unitData.Results[key],\n                phaseName: phaseName,\n                newFormat: true\n            }, 'results-table.dv-matches-table' ) %> </div> <% }); %> <% } else if ( unitData && unitData.Results && unitData.Results.length ) { %> <table class=\"results-table__table results-table__table--dv\"> <thead> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption\" colspan=\"7\"> <%= render( {\n                        cssClass: 'results-table__caption-icon',\n                        name: 'info'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.resultsTable.caption' ) %> </td> </tr> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption results-table__caption--mob-swipe\" colspan=\"10\"> <%= render( {\n                        cssClass: 'results-table__caption-icon results-table__caption-icon--mob-swipe',\n                        name: 'touch'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.table.mobileSwipePrompt' ) %> </td> </tr> <tr class=\"results-table__header-row\"> <th class=\"results-table__header-cell results-table__header-cell--small u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.rank' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-show-tablet\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.rank.short' ) %></th> <th class=\"results-table__header-cell u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--medium u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.points' ) %></th> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind.abbr' ) %></th> <th class=\"results-table__header-cell u-hide-tablet\"></th> </tr> </thead> <tbody> <% if ( unitData.Results && unitData.Results.length ) { %> <% _.each( unitData.Results, function( result, index ) { %> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row\"> <td class=\"results-table__cell <%= result.MedalTag ? 'results-table__cell--' + result.MedalTag.toLowerCase() : '' %> bold\"> <%= result.Rank %> <% if ( result.MedalTag ) { %> <%= render( {\n                                    cssClass: 'results-table__medal u-hide-tablet',\n                                    name: 'medal'\n                                }, 'common.render-svg' ) %> <% } %> </td> <td class=\"results-table__cell u-text-left u-hide-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                    cssClass: 'results-table__country-flag',\n                                    countryCode: result.NAT\n                                }, 'common.flag' ) %> <%= result.NAT %> </div> </td> <td class=\"results-table__cell u-text-left\"> <% if ( result.Competitors && result.Competitors.length ) { %> <% _.each( result.Competitors, function( competitor, index ) { %> <% if ( competitor.athleteLink ) { %> <a class=\"results-table__athlete-link results-table__athlete-link--multiple\" href=\"<%= competitor.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <%= render( {\n                                                    cssClass: 'results-table__athlete-image',\n                                                    id: competitor.ResultId,\n                                                    size: 'TABLE',\n                                                    objectFit: true\n                                                }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                        cssClass: 'results-table__athlete-arrow',\n                                                        name: 'arrow-forward'\n                                                    }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= competitor.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= competitor.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                            cssClass: 'results-table__country-flag',\n                                                            countryCode: competitor.NAT\n                                                        }, 'common.flag' ) %> <%= competitor.NAT %> </div> <span class=\"results-table__athlete-more results-table__athlete-more--country u-show-small-mobile\"> <%= render( {\n                                                            cssClass: 'results-table__athlete-arrow',\n                                                            name: 'arrow-forward'\n                                                        }, 'common.render-svg' ) %> </span> </span> </div> </a> <% } else { %> <div class=\"results-table__athlete-link results-table__athlete-link--multiple\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <%= render( {\n                                                    cssClass: 'results-table__athlete-image',\n                                                    id: competitor.ResultId,\n                                                    size: 'TABLE',\n                                                    objectFit: true\n                                                }, 'common.athlete-headshot' ) %> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= competitor.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= competitor.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                            cssClass: 'results-table__country-flag',\n                                                            countryCode: competitor.NAT\n                                                        }, 'common.flag' ) %> <%= competitor.NAT %> </div> </span> </div> </div> <% } %> <% } ); %> <% } %> </td> <% if ( result.Competitors && result.Competitors.length > 1 ) { %> <td class=\"results-table__cell results-table__cell--no-padding u-text-left u-hide-tablet\"> <% _.each( result.Competitors, function( competitor, index ) { %> <span class=\"results-table__athlete-age\"> <%= competitor.AthleteResultAge ? competitor.AthleteResultAge : '-' %> </span> <% } ); %> </td> <% } else { %> <td class=\"results-table__cell u-text-left u-hide-tablet\"> <%= result.AthleteResultAge ? result.AthleteResultAge : '-' %> </td> <% } %> <% if ( result.ScoringAbbr ) { %> <td class=\"results-table__cell\"> <%= result.ScoringAbbr %> </td> <% } else if ( result.TotalPoints ) { %> <td class=\"results-table__cell results-table__cell--highlight black\"> <% if ( result.Qualified && result.Qualified === 'Q' ) { %> <span class=\"results-table__qualified\"><%= PULSE.I18N.lookup( 'label.qualified' ) %></span> <% } %> <%= result.TotalPoints %> </td> <% } else { %> <td class=\"results-table__cell\"> - </td> <% } %> <td class=\"results-table__cell\"><%= result.PointsBehind ? result.PointsBehind : '-' %></td> <td class=\"results-table__cell results-table__cell--no-padding\"> <button class=\"results-table__expand-btn results-table__expand-btn--hide-tablet js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> </td> </tr> <% if ( result.Dives && result.Dives.length ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"7\"> <table class=\"results-table__sub-table\"> <thead> <tr class=\"results-table__sub-header-row\"> <% if ( unitData.Is3m10mTeam ) { %> <th class=\"results-table__sub-header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.round' ) %></th> <% } %> <th class=\"results-table__sub-header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.dive' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.diveNumber.abbr' ) %></th> <% if ( result.Competitors && result.Competitors.length && result.Dives[0].Competitor != null ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--dd u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--extra-spacing u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diver' ) %></th> <% } else { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small results-table__sub-header-cell--extra-spacing u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-show-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <% } %> <% _.each( result.Dives[0].JudgesScores, function( judge, index ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-hide-tablet <%= index === result.Dives[0].JudgesScores.length - 1 ? 'results-table__sub-header-cell--extra-spacing results-table__sub-header-cell--extra-padding u-text-left' : 'results-table__sub-header-cell--judge' %>\"><%= judge.Type %></th> <% } ); %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints' ) %></span> <span class=\"u-show-tablet u-hide-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints.abbr' ) %></span> <span class=\"u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints.short' ) %></span> </th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints' ) %></span> <span class=\"u-show-tablet u-hide-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints.abbr' ) %></span> <span class=\"u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints.short' ) %></span> </th> <% if ( unitData.Is3m10mTeam ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.roundPoints' ) %></span> <span class=\"u-show-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.roundPoints.short' ) %></span> </th> <% } %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.diveRank' ) %></span> <span class=\"u-show-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.diveRank.short' ) %></span> </th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.overallRank.abbr' ) %></span> <span class=\"u-show-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.overallRank.short' ) %></span> </th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind' ) %></span> <span class=\"u-show-tablet u-hide-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind.abbr' ) %></span> <span class=\"u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind.short' ) %></span> </th> </tr> </thead> <tbody> <% _.each( result.Dives, function( dive, index ) { %> <tr class=\"results-table__sub-row results-table__sub-header-row--border <%= index === result.Dives.length - 1 ? 'results-table__sub-row--last' : '' %>\"> <% if ( unitData.Is3m10mTeam ) { %> <td class=\"results-table__sub-cell\"><%= dive.DiveRound !== null ? dive.DiveRound : '-' %></td> <% } %> <td class=\"results-table__sub-cell results-table__sub-cell--dive\"><%= dive.DiveOrder !== null ? dive.DiveOrder : '-' %></td> <td class=\"results-table__sub-cell\"><%= dive.DiveNo !== null ? dive.DiveNo : '-' %></td> <td class=\"results-table__sub-cell u-text-left\"><%= dive.DD !== null ? dive.DD : '-' %></td> <% if ( dive.Competitor ) { %> <td class=\"results-table__sub-cell u-text-left u-hide-tablet\"> <%= dive.FirstName %> <strong class=\"black\"><%= dive.LastName %></strong> </td> <% } %> <% _.each( dive.JudgesScores, function( score, index ) { %> <td class=\"results-table__sub-cell u-hide-tablet <%= index === dive.JudgesScores.length - 1 ? 'u-text-left' : '' %> <%= score.Score === '10.0' ? 'black' : '' %>\"><%= score.Score !== null ? score.Score : '-' %></td> <% } ); %> <td class=\"results-table__sub-cell\"><%= dive.DivePoints !== null ? dive.DivePoints : '-' %></td> <td class=\"results-table__sub-cell black\"><%= dive.TotalPoints !== null ? dive.TotalPoints : '-' %></td> <% if ( unitData.Is3m10mTeam ) { %> <td class=\"results-table__sub-cell\"><%= dive.RoundPoints !== null ? dive.RoundPoints : '-' %></td> <% } %> <td class=\"results-table__sub-cell results-table__sub-cell--dive-rank\"><%= dive.DiveRank !== null ? dive.DiveRank : '-' %></td> <td class=\"results-table__sub-cell black\"><%= dive.OverallRank !== null ? dive.OverallRank : '-' %></td> <td class=\"results-table__sub-cell\"><%= dive.PointsBehind !== null ? dive.PointsBehind : '-' %></td> </tr> <tr class=\"u-show-tablet\"> <td colspan=\"8\"> <table class=\"results-table__sub-table results-table__sub-table--nested\"> <thead> <tr class=\"results-table__sub-row results-table__sub-row--judges\"> <% _.each( result.Dives[0].JudgesScores, function( judge, index ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= judge.Type %></th> <% } ); %> </tr> </thead> <tbody> <tr class=\"results-table__sub-row--border\"> <% _.each( dive.JudgesScores, function( score, index ) { %> <td class=\"results-table__sub-cell <%= score.Score === '10.0' ? 'black' : '' %>\"><%= score.Score !== null ? score.Score : '-' %></td> <% } ); %> </tr> </tbody> </table> </td> </tr> <% } ); %> </tbody> </table> </td> </tr> <% } %> <% } ); %> <% } %> <tr> <td colspan=\"7\"> <div class=\"results-table__footer\"> <div class=\"results-table__legend\"> <%= render( {\n                                cssClass: 'results-table__legend-icon',\n                                name: 'info'\n                            }, 'common.render-svg' ) %> <%= render( {\n                                cssClass: 'u-hide-tablet',\n                                abbr: 'diving.desktop'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-tablet u-hide-mobile',\n                                abbr: 'diving.tablet'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-mobile u-hide-small-mobile',\n                                abbr: 'diving.mobile'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-small-mobile',\n                                abbr: 'diving.mobileSmall',\n                                asterisk: 'diving'\n                            }, 'common.render-legend-item' ) %> </div> <div class=\"results-table__sponsor js-results-table-sponsor\"></div> </div> </td> </tr> </tbody> </table> <% } else { %> <div class=\"results-table__empty-table\"> <%= PULSE.I18N.lookup( 'label.empty.state.resultsTable' ) %> </div> <% } %>");
PULSE.app.templates['results-table.table-hd'] = _.template("<% if ( unitData && unitData.Results && unitData.Results.length ) { %> <table class=\"results-table__table results-table__table--hd\"> <thead> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption\" colspan=\"7\"> <%= render( {\n                        cssClass: 'results-table__caption-icon',\n                        name: 'info'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.resultsTable.caption' ) %> </td> </tr> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption results-table__caption--mob-swipe\" colspan=\"10\"> <%= render( {\n                        cssClass: 'results-table__caption-icon results-table__caption-icon--mob-swipe',\n                        name: 'touch'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.table.mobileSwipePrompt' ) %> </td> </tr> <tr class=\"results-table__header-row\"> <th class=\"results-table__header-cell results-table__header-cell--small u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.rank' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-show-tablet\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.rank.short' ) %></th> <th class=\"results-table__header-cell u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--medium u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.points' ) %></th> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind' ) %></th> <th class=\"results-table__header-cell u-hide-tablet\"></th> </tr> </thead> <tbody> <% _.each( unitData.Results, function( result, index ) { %> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row\"> <td class=\"results-table__cell <%= result.MedalTag ? 'results-table__cell--' + result.MedalTag.toLowerCase() : '' %> bold\"> <%= result.Rank %> <% if ( result.MedalTag ) { %> <%= render( {\n                                cssClass: 'results-table__medal u-hide-tablet',\n                                name: 'medal'\n                            }, 'common.render-svg' ) %> <% } %> </td> <td class=\"results-table__cell u-text-left u-hide-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                cssClass: 'results-table__country-flag',\n                                countryCode: result.NAT\n                            }, 'common.flag' ) %> <%= result.NAT %> </div> </td> <td class=\"results-table__cell u-text-left\"> <% if ( result.athleteLink ) { %> <a class=\"results-table__athlete-link\" href=\"<%= result.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <%= render( {\n                                        cssClass: 'results-table__athlete-image',\n                                        id: result.ResultId,\n                                        size: 'TABLE',\n                                        objectFit: true\n                                    }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                            cssClass: 'results-table__athlete-arrow',\n                                            name: 'arrow-forward'\n                                        }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= result.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= result.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                cssClass: 'results-table__country-flag',\n                                                countryCode: result.NAT\n                                            }, 'common.flag' ) %> <%= result.NAT %> </div> <span class=\"results-table__athlete-more results-table__athlete-more--country u-show-small-mobile\"> <%= render( {\n                                                cssClass: 'results-table__athlete-arrow',\n                                                name: 'arrow-forward'\n                                            }, 'common.render-svg' ) %> </span> </span> </div> </a> <% } else { %> <div class=\"results-table__athlete-link\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <%= render( {\n                                        cssClass: 'results-table__athlete-image',\n                                        id: result.ResultId,\n                                        size: 'TABLE',\n                                        objectFit: true\n                                    }, 'common.athlete-headshot' ) %> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= result.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= result.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                cssClass: 'results-table__country-flag',\n                                                countryCode: result.NAT\n                                            }, 'common.flag' ) %> <%= result.NAT %> </div> </span> </div> </div> <% } %> </td> <td class=\"results-table__cell u-text-left u-hide-tablet\"> <%= result.AthleteResultAge ? result.AthleteResultAge : PULSE.I18N.lookup( 'label.na' ) %> </td> <% if ( result.ScoringAbbr ) { %> <td class=\"results-table__cell\"> <%= result.ScoringAbbr %> </td> <% } else if ( result.TotalPoints ) { %> <td class=\"results-table__cell results-table__cell--highlight black\"> <%= result.TotalPoints %> </td> <% } else { %> <td class=\"results-table__cell\"> - </td> <% } %> <td class=\"results-table__cell\"><%= result.PointsBehind ? result.PointsBehind : '-' %></td> <td class=\"results-table__cell results-table__cell--no-padding\"> <button class=\"results-table__expand-btn results-table__expand-btn--hide-tablet js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> </td> </tr> <% if ( result.Dives && result.Dives.length ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"7\"> <table class=\"results-table__sub-table\"> <thead> <tr class=\"results-table__sub-header-row\"> <th class=\"results-table__sub-header-cell u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.dive' ) %></th> <th class=\"results-table__sub-header-cell u-show-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.dive' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.diveNumber.abbr' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small results-table__sub-header-cell--extra-spacing u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-show-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.diveDifficulty.short' ) %></th> <% _.each( result.Dives[0].JudgesScores, function( judge, index ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-hide-tablet <%= index === result.Dives[0].JudgesScores.length - 1 ? 'results-table__sub-header-cell--extra-spacing results-table__sub-header-cell--extra-padding u-text-left' : 'results-table__sub-header-cell--judge' %>\"><%= judge.Type %></th> <% } ); %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints' ) %></span> <span class=\"u-show-tablet u-hide-small-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints.abbr' ) %></span> <span class=\"u-show-small-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.divePoints.short' ) %></span> </th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints' ) %></span> <span class=\"u-show-tablet u-hide-small-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints.abbr' ) %></span> <span class=\"u-show-small-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.totalPoints.short' ) %></span> </th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.diveRank' ) %></span> <span class=\"u-show-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.diveRank.short' ) %></span> </th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.overallRank.abbr' ) %></span> <span class=\"u-show-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.overallRank.short' ) %></span> </th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"> <span class=\"u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind' ) %></span> <span class=\"u-show-tablet u-hide-small-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind.abbr' ) %></span> <span class=\"u-show-small-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind.short' ) %></span> </th> </tr> </thead> <tbody> <% _.each( result.Dives, function( dive, index ) { %> <tr class=\"results-table__sub-row results-table__sub-header-row--border <%= index === result.Dives.length - 1 ? 'results-table__sub-row--last' : '' %>\"> <td class=\"results-table__sub-cell\"><%= dive.DiveOrder %></td> <td class=\"results-table__sub-cell\"><%= dive.DiveNo %></td> <td class=\"results-table__sub-cell u-text-left u-hide-tablet\"><%= dive.DD %></td> <td class=\"results-table__sub-cell u-show-tablet\"><%= dive.DD %></td> <% _.each( dive.JudgesScores, function( score, index ) { %> <td class=\"results-table__sub-cell u-hide-tablet <%= index === dive.JudgesScores.length - 1 ? 'u-text-left results-table__sub-cell--extra-spacing' : '' %> <%= score.Score === '10.0' ? 'black' : '' %>\"><%= score.Score ? score.Score : '-' %></td> <% } ); %> <td class=\"results-table__sub-cell\"><%= dive.DivePoints %></td> <td class=\"results-table__sub-cell black\"><%= dive.TotalPoints %></td> <td class=\"results-table__sub-cell results-table__sub-cell--dive-rank\"><%= dive.DiveRank %></td> <td class=\"results-table__sub-cell black\"><%= dive.OverallRank %></td> <td class=\"results-table__sub-cell\"><% if ( dive.PointsBehind != null ) { %> <%= dive.PointsBehind %> <% } else { %> - <% } %></td> </tr> <tr class=\"u-show-tablet\"> <td colspan=\"8\"> <table class=\"results-table__sub-table results-table__sub-table--nested\"> <thead> <tr class=\"results-table__sub-row results-table__sub-row--judges\"> <% _.each( result.Dives[0].JudgesScores, function( judge, index ) { %> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= judge.Type %></th> <% } ); %> </tr> </thead> <tbody> <tr class=\"results-table__sub-row--border\"> <% _.each( dive.JudgesScores, function( score, index ) { %> <td class=\"results-table__sub-cell <%= score.Score === '10.0' ? 'black' : '' %>\"><%= score.Score ? score.Score : '-' %></td> <% } ); %> </tr> </tbody> </table> </td> </tr> <% } ); %> </tbody> </table> </td> </tr> <% } %> <% } ); %> <tr> <td colspan=\"7\"> <div class=\"results-table__footer\"> <div class=\"results-table__legend\"> <%= render( {\n                                cssClass: 'results-table__legend-icon',\n                                name: 'info'\n                            }, 'common.render-svg' ) %> <%= render( {\n                                cssClass: 'u-hide-tablet',\n                                abbr: 'highDiving.desktop'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-tablet u-hide-mobile',\n                                abbr: 'highDiving.tablet'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-mobile u-hide-small-mobile',\n                                abbr: 'highDiving.mobile'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-small-mobile',\n                                abbr: 'highDiving.mobileSmall',\n                                asterisk: 'highDiving'\n                            }, 'common.render-legend-item' ) %> </div> <div class=\"results-table__sponsor js-results-table-sponsor\"></div> </div> </td> </tr> </tbody> </table> <% } else { %> <div class=\"results-table__empty-table\"> <%= PULSE.I18N.lookup( 'label.empty.state.resultsTable' ) %> </div> <% } %>");
PULSE.app.templates['results-table.table-ow'] = _.template("<% if ( unitData.Results && unitData.Results.length ) { %> <table class=\"results-table__table results-table__table--ow\"> <% if ( unitData.IsMixedEvent ) { %> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption\" colspan=\"<%= unitData.IsMixedEvent ? '5' : '6' %>\"> <%= render( {\n                        cssClass: 'results-table__caption-icon',\n                        name: 'info'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.resultsTable.caption' ) %> </td> </tr> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption results-table__caption--mob-swipe\" colspan=\"10\"> <%= render( {\n                        cssClass: 'results-table__caption-icon results-table__caption-icon--mob-swipe',\n                        name: 'touch'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.table.mobileSwipePrompt' ) %> </td> </tr> <% } %> <thead> <tr class=\"results-table__header-row\"> <th class=\"results-table__header-cell results-table__header-cell--small u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.rank' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-show-tablet\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.rank.short' ) %></th> <% if ( unitData.IsMixedEvent ) { %> <th class=\"results-table__header-cell u-text-left results-table__header-cell--country\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <% } else { %> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.bibNumber.abbr' ) %></th> <th class=\"results-table__header-cell u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--medium u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <% } %> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.time' ) %></th> <th class=\"results-table__header-cell <%= !unitData.IsMixedEvent ? 'u-hide-small-mobile' : '' %>\"><%= PULSE.I18N.lookup( 'label.table.header.timeBehind' ) %></th> <% if ( unitData.IsMixedEvent ) { %> <th class=\"results-table__header-cell u-hide-tablet\"></th> <% } %> <% if ( !unitData.IsMixedEvent ) { %> <th class=\"results-table__header-cell results-table__header-cell--no-padding u-hide-tablet\"></th> <% } %> </tr> </thead> <tbody> <% _.each( unitData.Results, function( result, index ) { %> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row\"> <td class=\"results-table__cell <%= result.MedalTag ? 'results-table__cell--' + result.MedalTag.toLowerCase() : '' %> bold\"> <%= result.Rank %> <% if ( result.MedalTag ) { %> <%= render( {\n                                cssClass: 'results-table__medal u-hide-tablet',\n                                name: 'medal'\n                            }, 'common.render-svg' ) %> <% } %> </td> <% if ( !unitData.IsMixedEvent ) { %> <td class=\"results-table__cell\"> <%= result.Bib %> </td> <% } %> <td class=\"results-table__cell u-text-left <%= unitData.IsMixedEvent ? '' : 'u-hide-tablet' %>\"> <div class=\"results-table__country\"> <%= render( {\n                                cssClass: 'results-table__country-flag',\n                                countryCode: result.NAT\n                            }, 'common.flag' ) %> <%= result.NAT %> </div> </td> <% if ( !unitData.IsMixedEvent ) { %> <td class=\"results-table__cell u-text-left\"> <% if ( result.athleteLink ) { %> <a class=\"results-table__athlete-link\" href=\"<%= result.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-mobile\"> <%= render( {\n                                            cssClass: 'results-table__athlete-image',\n                                            id: result.ResultId,\n                                            size: 'TABLE',\n                                            objectFit: true\n                                        }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                cssClass: 'results-table__athlete-arrow',\n                                                name: 'arrow-forward'\n                                            }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= result.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= result.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                    cssClass: 'results-table__country-flag',\n                                                    countryCode: result.NAT\n                                                }, 'common.flag' ) %> <%= result.NAT %> </div> <span class=\"results-table__athlete-more results-table__athlete-more--country u-show-mobile\"> <%= render( {\n                                                    cssClass: 'results-table__athlete-arrow',\n                                                    name: 'arrow-forward'\n                                                }, 'common.render-svg' ) %> </span> </span> </div> </a> <% } else { %> <div class=\"results-table__athlete-link\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-mobile\"> <%= render( {\n                                            cssClass: 'results-table__athlete-image',\n                                            id: result.ResultId,\n                                            size: 'TABLE',\n                                            objectFit: true\n                                        }, 'common.athlete-headshot' ) %> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= result.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= result.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                    cssClass: 'results-table__country-flag',\n                                                    countryCode: result.NAT\n                                                }, 'common.flag' ) %> <%= result.NAT %> </div> </span> </div> </div> <% } %> </td> <td class=\"results-table__cell u-hide-tablet u-text-left\"> <%= result.AthleteResultAge ? result.AthleteResultAge : PULSE.I18N.lookup( 'label.na' ) %> </td> <% } %> <% if ( result.ScoringAbbr ) { %> <td class=\"results-table__cell\"> <%= result.ScoringAbbr %> </td> <% } else if ( result.Time ) { %> <td class=\"results-table__cell results-table__cell--highlight black\"> <% if ( result.Qualified && result.Qualified === 'Q' ) { %> <span class=\"results-table__qualified\"><%= PULSE.I18N.lookup( 'label.qualified' ) %></span> <% } %> <%= result.Time %> <% if ( result.RecordType && result.RecordType.length ) { %> <div class=\"results-table__records\"> <% _.each( result.RecordType, function( record ) { %> <span class=\"results-table__record results-table__record--<%= record.toLowerCase() %>\"> <%= record %> </span> <% } ); %> </div> <% } %> </td> <% } else { %> <td class=\"results-table__cell\"> - </td> <% } %> <td class=\"results-table__cell <%= !unitData.IsMixedEvent ? 'u-hide-small-mobile' : '' %>\"> <%= result.TimeBehind ? '&#43;' + result.TimeBehind : '-' %> </td> <% if ( unitData.IsMixedEvent ) { %> <td class=\"results-table__cell results-table__cell--no-padding\"> <button class=\"results-table__expand-btn results-table__expand-btn--hide-tablet js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> </td> <% } %> <!-- Splits for non-mixed events; only 1 expandable area available --> <% if ( !unitData.IsMixedEvent ) { %> <td class=\"results-table__cell results-table__cell--no-padding\"> <% if ( result.Splits && result.Splits.length ) { %> <button class=\"results-table__expand-btn results-table__expand-btn--hide-tablet js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> <% } %> </td> <% } %> </tr> <% if ( unitData.IsMixedEvent ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"<%= unitData.IsMixedEvent ? '5' : '6' %>\"> <table class=\"results-table__sub-table\"> <thead> <tr class=\"results-table__sub-row\"> <th class=\"results-table__sub-header-cell u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.bibNumber.abbr' ) %></th> <th class=\"results-table__sub-header-cell u-show-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.bibNumber.short' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-cell--athletes u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athletes' ) %></th> <th class=\"results-table__sub-header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <th class=\"results-table__sub-header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.time' ) %></th> </tr> </thead> <tbody> <% _.each( result.SubResults, function( competitor, index ) { %> <tr class=\"results-table__sub-row\"> <td class=\"results-table__sub-cell\"><%= competitor.Bib %></td> <td class=\"results-table__sub-cell u-text-left\"> <a class=\"results-table__athlete-link\" href=\"<%= competitor.athleteLink %>\"> <div class=\"results-table__athlete-image-container\"> <%= render( {\n                                                            cssClass: 'results-table__athlete-image',\n                                                            id: competitor.ResultId,\n                                                            size: 'TABLE',\n                                                            objectFit: true\n                                                        }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                                cssClass: 'results-table__athlete-arrow',\n                                                                name: 'arrow-forward'\n                                                            }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= competitor.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= competitor.LastName %> </span> </div> </a> </td> <td class=\"results-table__sub-cell\"><%= competitor.AthleteResultAge %></td> <td class=\"results-table__sub-cell\"><%= competitor.Time %></td> </tr> <% } ); %> </tbody> </table> </td> </tr> <% } %> <% if ( !unitData.IsMixedEvent ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"10\"> <table class=\"results-table__sub-table\"> <% if ( result.showSprintRanks ) { %> <thead> <tr class=\"results-table__sub-header-row\"> <th class=\"results-table__sub-header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.sprint' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.sprintRank' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.sprintTime' ) %></th> </tr> </thead> <tbody> <% _.each( result.sprintRanks, function( sprint, index ) { %> <tr class=\"results-table__sub-row <%= index === result.sprintRanks.length - 1 ? 'results-table__sub-row--last' : '' %>\"> <td class=\"results-table__sub-cell u-text-left\"> <div class=\"results-table__split-container\"> <div class=\"results-table__split\"> <span class=\"results-table__split-marker\"></span> <%= PULSE.I18N.lookup( 'label.table.header.sprint' ) %> <%= index + 1 %> </div> </div> </td> <td class=\"results-table__sub-cell\"> <%= sprint.Rank ? sprint.Rank : '-' %> </td> <td class=\"results-table__sub-cell\"> <%= sprint.Time ? sprint.Time : '-' %> </td> </tr> <% } ); %> </tbody> <% } else if ( result.Splits ) { %> <thead> <tr class=\"results-table__sub-header-row\"> <th class=\"results-table__sub-header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.split' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.splitTime' ) %></th> </tr> </thead> <tbody> <% _.each( result.Splits, function( sprint, index ) { %> <tr class=\"results-table__sub-row <%= index === result.Splits.length - 1 ? 'results-table__sub-row--last' : '' %>\"> <td class=\"results-table__sub-cell u-text-left\"> <div class=\"results-table__split-container\"> <div class=\"results-table__split\"> <span class=\"results-table__split-marker\"></span> <%= PULSE.I18N.lookup( 'label.table.header.split' ) %> <%= index + 1 %> </div> </div> </td> <td class=\"results-table__sub-cell\"> <%= sprint.Time ? sprint.Time : '-' %> </td> </tr> <% } ); %> </tbody> <% } %> </table> </td> </tr> <% } %> <% } ); %> <tr> <td colspan=\"<%= unitData.IsMixedEvent ? '5' : '6' %>\"> <div class=\"results-table__footer\"> <div class=\"results-table__legend\"> <%= render( {\n                                cssClass: 'results-table__legend-icon',\n                                name: 'info'\n                            }, 'common.render-svg' ) %> <%= render( {\n                                cssClass: 'u-hide-tablet',\n                                abbr: 'openWater.desktop',\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-tablet u-hide-mobile',\n                                abbr: 'openWater.tablet'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-mobile u-hide-small-mobile',\n                                abbr: 'openWater.mobile'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-small-mobile',\n                                abbr: 'openWater.mobileSmall',\n                                asterisk: 'openWater'\n                            }, 'common.render-legend-item' ) %> </div> <div class=\"results-table__sponsor js-results-table-sponsor\"></div> </div> </td> </tr> </tbody> </table> <% } else { %> <div class=\"results-table__empty-table\"> <%= PULSE.I18N.lookup( 'label.empty.state.resultsTable' ) %> </div> <% } %>");
PULSE.app.templates['results-table.table-sw-relay'] = _.template("<% if ( unitData && unitData.Results && unitData.Results.length ) { %> <table class=\"results-table__table results-table__table--sw-relay\"> <thead> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption\" colspan=\"7\"> <%= render( {\n                        cssClass: 'results-table__caption-icon',\n                        name: 'info'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.resultsTable.caption' ) %> </td> </tr> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption results-table__caption--mob-swipe\" colspan=\"10\"> <%= render( {\n                        cssClass: 'results-table__caption-icon results-table__caption-icon--mob-swipe',\n                        name: 'touch'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.table.mobileSwipePrompt' ) %> </td> </tr> <tr class=\"results-table__header-row\"> <th class=\"results-table__header-cell results-table__header-cell--small u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.rank' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-show-tablet\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.rank.short' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.lane' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.lane.short' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--medium u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.time' ) %></th> <th class=\"results-table__header-cell u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.timeBehind' ) %></th> <th class=\"results-table__header-cell u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.timeBehind.short' ) %></th> <th class=\"results-table__header-cell u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.points' ) %></th> <th class=\"results-table__header-cell u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.points.abbr' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--no-padding u-hide-tablet\"></th> </tr> </thead> <tbody> <% _.each( unitData.Results, function( result, index ) { %> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row\"> <td class=\"results-table__cell <%= result.MedalTag ? 'results-table__cell--' + result.MedalTag.toLowerCase() : '' %> bold\"> <% if ( unitData.IsSummary ) { %> <%= result.Rank ? result.Rank : '-' %> <% } else { %> <%= result.HeatRank ? result.HeatRank : '-' %> <% } %> <% if ( result.MedalTag ) { %> <%= render( {\n                                cssClass: 'results-table__medal u-hide-tablet',\n                                name: 'medal'\n                            }, 'common.render-svg' ) %> <% } %> </td> <td class=\"results-table__cell\"> <%= typeof result.Lane === 'number' ? result.Lane : '-' %> </td> <td class=\"results-table__cell u-text-left\"> <div class=\"results-table__country\"> <%= render( {\n                                cssClass: 'results-table__country-flag',\n                                countryCode: result.NAT\n                            }, 'common.flag' ) %> <% if ( result.NatName ) { %> <%= result.NAT === 'CLB' ? result.ClubName : result.NATName %> <% } else { %> <%= result.NAT === 'CLB' ? result.ClubName : result.NAT %> <% } %> </div> </td> <% if ( result.ScoringAbbr ) { %> <td class=\"results-table__cell\"> <%= result.ScoringAbbr %> </td> <% } else if ( result.Time ) { %> <td class=\"results-table__cell results-table__cell--highlight black\"> <% if ( result.Qualified && result.Qualified === 'Q' ) { %> <span class=\"results-table__qualified\"><%= PULSE.I18N.lookup( 'label.qualified' ) %></span> <% } %> <%= result.Time %> <% if ( result.RecordType && result.RecordType.length ) { %> <div class=\"results-table__records\"> <% _.each( result.RecordType, function( record ) { %> <span class=\"results-table__record results-table__record--<%= record.toLowerCase() %>\"> <%= record %> </span> <% } ); %> </div> <% } %> </td> <% } else { %> <td class=\"results-table__cell\"> - </td> <% } %> <td class=\"results-table__cell\"> <%= result.TimeBehind ? '&#43;' + result.TimeBehind : '-' %> </td> <td class=\"results-table__cell black\"> <%= result.Points ? result.Points : '-' %> </td> <td class=\"results-table__cell results-table__cell--no-padding\"> <% if ( result.SubResults && result.SubResults.length ) { %> <button class=\"results-table__expand-btn results-table__expand-btn--hide-tablet js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> <% } %> </td> </tr> <% if ( result.SubResults && result.SubResults.length ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"7\"> <table class=\"results-table__sub-table\"> <thead> <tr class=\"results-table__sub-header-row\"> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--medium u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__sub-header-cell u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <th class=\"results-table__sub-header-cell\" title=\"Reaction Time\"><%= PULSE.I18N.lookup( 'label.table.header.reactionTime.short' ) %></th> <th class=\"results-table__sub-header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.distance' ) %></th> <th class=\"results-table__sub-header-cell u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.splitTime' ) %></th> <th class=\"results-table__sub-header-cell u-show-tablet\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.splitTime.short' ) %></th> <th class=\"results-table__sub-header-cell u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.cumulativeTime' ) %></th> <th class=\"results-table__sub-header-cell u-show-tablet\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.cumulativeTime.short' ) %></th> </tr> </thead> <tbody> <% _.each( result.SubResults, function( subResult, index ) { %> <% \n                                            let hasResults = false;\n                                            if ( subResult.RT && subResult.Splits.length ) {\n                                                hasResults = true\n                                            }\n                                        %> <tr class=\"results-table__sub-row <%= !hasResults ? 'results-table__sub-row--no-results' : '' %> <%= index === result.SubResults.length - 1 ? 'results-table__sub-row--last' : '' %>\"> <td class=\"results-table__sub-cell u-text-left\"> <% if ( subResult.athleteLink ) { %> <a class=\"results-table__athlete-link\" href=\"<%= subResult.athleteLink %>\"> <div class=\"results-table__athlete-image-container u-hide-small-mobile\"> <%= render( {\n                                                                cssClass: 'results-table__athlete-image',\n                                                                id: subResult.ResultId,\n                                                                size: 'TABLE',\n                                                                objectFit: true\n                                                            }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                                    cssClass: 'results-table__athlete-arrow',\n                                                                    name: 'arrow-forward'\n                                                                }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= subResult.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= subResult.LastName %> </span> </div> </a> <% } else { %> <div class=\"results-table__athlete-link\"> <div class=\"results-table__athlete-image-container\"> <%= render( {\n                                                                cssClass: 'results-table__athlete-image',\n                                                                id: subResult.ResultId,\n                                                                size: 'TABLE',\n                                                                objectFit: true\n                                                            }, 'common.athlete-headshot' ) %> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= subResult.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= subResult.LastName %> </span> </div> </div> <% } %> </td> <td class=\"results-table__sub-cell u-hide-tablet\"><%= subResult.AthleteResultAge %></td> <td class=\"results-table__sub-cell\"> <%= subResult.RT ? subResult.RT : '-' %> </td> <td class=\"results-table__sub-cell u-text-left\"> <div class=\"results-table__split-container\"> <% _.each( subResult.Splits, function( subSplit, index ) { %> <div class=\"results-table__split\"> <span class=\"results-table__split-marker\"></span> <%= subSplit.Distance ? subSplit.Distance : '-' %> </div> <% } ); %> </div> </td> <td class=\"results-table__sub-cell\"> <div class=\"results-table__split-container\"> <% _.each( subResult.Splits, function( subSplit, index ) { %> <div class=\"results-table__split\"> <%= subSplit.DifferentialTime ? subSplit.DifferentialTime : '-' %> </div> <% } ); %> </div> </td> <td class=\"results-table__sub-cell results-table__sub-cell--time\"> <div class=\"results-table__split-container\"> <% _.each( subResult.Splits, function( subSplit, index ) { %> <div class=\"results-table__split\"> <%= subSplit.Time ? subSplit.Time : '-' %> <% if ( subSplit.RecordType ) { %> <div class=\"results-table__records\"> <span class=\"results-table__record results-table__record--<%= subSplit.RecordType.toLowerCase() %>\"> <%= subSplit.RecordType %> </span> </div> <% } %> </div> <% } ); %> </div> </td> </tr> <% } ); %> </tbody> </table> </td> </tr> <% } %> <% } ); %> <tr> <td colspan=\"7\"> <div class=\"results-table__footer\"> <div class=\"results-table__legend\"> <%= render( {\n                                cssClass: 'results-table__legend-icon',\n                                name: 'info'\n                            }, 'common.render-svg' ) %> <%= render( {\n                                cssClass: 'u-hide-tablet',\n                                abbr: 'swRelay.desktop'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-tablet u-hide-mobile',\n                                abbr: 'swRelay.tablet'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-mobile u-hide-small-mobile',\n                                abbr: 'swRelay.mobile'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-small-mobile',\n                                abbr: 'swRelay.mobileSmall',\n                                asterisk: 'swRelay'\n                            }, 'common.render-legend-item' ) %> </div> <div class=\"results-table__sponsor js-results-table-sponsor\"></div> </div> </td> </tr> </tbody> </table> <% } else { %> <div class=\"results-table__empty-table\"> <%= PULSE.I18N.lookup( 'label.empty.state.resultsTable' ) %> </div> <% } %>");
PULSE.app.templates['results-table.table-sw'] = _.template("<% if ( unitData && unitData.Results && unitData.Results.length ) { %> <table class=\"results-table__table results-table__table--sw\"> <thead> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption\" colspan=\"10\"> <%= render( {\n                        cssClass: 'results-table__caption-icon',\n                        name: 'info'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.resultsTable.caption' ) %> </td> </tr> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption results-table__caption--mob-swipe\" colspan=\"10\"> <%= render( {\n                        cssClass: 'results-table__caption-icon results-table__caption-icon--mob-swipe',\n                        name: 'touch'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.table.mobileSwipePrompt' ) %> </td> </tr> <tr class=\"results-table__header-row\"> <th class=\"results-table__header-cell results-table__header-cell--small u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.rank' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-show-tablet\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.rank.short' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.lane' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.lane.short' ) %></th> <th class=\"results-table__header-cell u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--medium u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <th class=\"results-table__header-cell\" title=\"Reaction Time\"><%= PULSE.I18N.lookup( 'label.table.header.reactionTime.short' ) %></th> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.time' ) %></th> <th class=\"results-table__header-cell u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.timeBehind' ) %></th> <th class=\"results-table__header-cell u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.timeBehind.short' ) %></th> <th class=\"results-table__header-cell u-hide-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.points' ) %></th> <th class=\"results-table__header-cell u-show-mobile\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.points.abbr' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--no-padding u-hide-tablet\"></th> </tr> </thead> <tbody> <% _.each( unitData.Results, function( result, index ) { %> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row\"> <td class=\"results-table__cell <%= result.MedalTag ? 'results-table__cell--' + result.MedalTag.toLowerCase() : '' %> bold\"> <% if ( unitData.IsSummary ) { %> <%= result.Rank ? result.Rank : '-' %> <% } else { %> <%= result.HeatRank ? result.HeatRank : '-' %> <% } %> <% if ( result.MedalTag ) { %> <%= render( {\n                                cssClass: 'results-table__medal u-hide-tablet',\n                                name: 'medal'\n                            }, 'common.render-svg' ) %> <% } %> </td> <td class=\"results-table__cell\"> <%= typeof result.Lane === 'number' ? result.Lane : '-' %> </td> <td class=\"results-table__cell u-text-left u-hide-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                cssClass: 'results-table__country-flag',\n                                countryCode: result.NAT\n                            }, 'common.flag' ) %> <%= result.NAT %> </div> </td> <td class=\"results-table__cell u-text-left\"> <% if ( result.athleteLink ) { %> <a class=\"results-table__athlete-link\" href=\"<%= result.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-mobile\"> <%= render( {\n                                        cssClass: 'results-table__athlete-image',\n                                        id: result.ResultId,\n                                        size: 'TABLE',\n                                        objectFit: true\n                                    }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                            cssClass: 'results-table__athlete-arrow',\n                                            name: 'arrow-forward'\n                                        }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= result.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= result.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                cssClass: 'results-table__country-flag',\n                                                countryCode: result.NAT\n                                            }, 'common.flag' ) %> <%= result.NAT %> </div> <span class=\"results-table__athlete-more results-table__athlete-more--country u-show-mobile\"> <%= render( {\n                                                cssClass: 'results-table__athlete-arrow',\n                                                name: 'arrow-forward'\n                                            }, 'common.render-svg' ) %> </span> </span> </div> </a> <% } else { %> <div class=\"results-table__athlete-link\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-mobile\"> <%= render( {\n                                        cssClass: 'results-table__athlete-image',\n                                        id: result.ResultId,\n                                        size: 'TABLE',\n                                        objectFit: true\n                                    }, 'common.athlete-headshot' ) %> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= result.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= result.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                cssClass: 'results-table__country-flag',\n                                                countryCode: result.NAT\n                                            }, 'common.flag' ) %> <%= result.NAT %> </div> </span> </div> </div> <% } %> </td> <td class=\"results-table__cell u-text-left u-hide-tablet\"><%= result.AthleteResultAge %></td> <td class=\"results-table__cell\"> <%= result.RT ? result.RT : '-' %> </td> <% if ( result.ScoringAbbr ) { %> <td class=\"results-table__cell\"> <%= result.ScoringAbbr %> </td> <% } else if ( result.Time ) { %> <td class=\"results-table__cell results-table__cell--highlight black\"> <% if ( result.Qualified && result.Qualified === 'Q' ) { %> <span class=\"results-table__qualified\"><%= PULSE.I18N.lookup( 'label.qualified' ) %></span> <% } %> <%= result.Time %> <% if ( result.RecordType && result.RecordType.length ) { %> <div class=\"results-table__records\"> <% _.each( result.RecordType, function( record ) { %> <span class=\"results-table__record results-table__record--<%= record.toLowerCase() %>\"> <%= record %> </span> <% } ); %> </div> <% } %> </td> <% } else { %> <td class=\"results-table__cell\"> - </td> <% } %> <td class=\"results-table__cell\"> <%= result.TimeBehind ? '&#43;' + result.TimeBehind : '-' %> </td> <td class=\"results-table__cell black\"> <%= result.Points ? result.Points : '-' %> </td> <td class=\"results-table__cell results-table__cell--no-padding\"> <% if ( result.Splits && result.Splits.length ) { %> <button class=\"results-table__expand-btn results-table__expand-btn--hide-tablet js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> <% } %> </td> </tr> <% if ( result.Splits && result.Splits.length ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"10\"> <table class=\"results-table__sub-table\"> <thead> <tr class=\"results-table__sub-header-row\"> <th class=\"results-table__sub-header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.distance' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.splitTime' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.cumulativeTime' ) %></th> </tr> </thead> <tbody> <% _.each( result.Splits, function( split, index ) { %> <tr class=\"results-table__sub-row <%= index === result.Splits.length - 1 ? 'results-table__sub-row--last' : '' %>\"> <td class=\"results-table__sub-cell u-text-left\"> <div class=\"results-table__split-container\"> <div class=\"results-table__split\"> <span class=\"results-table__split-marker\"></span> <%= split.Distance ? split.Distance : '-' %> </div> </div> </td> <td class=\"results-table__sub-cell\"> <%= split.DifferentialTime ? split.DifferentialTime : '-' %> <% if ( split.RecordType ) { %> <div class=\"results-table__records\"> <span class=\"results-table__record results-table__record--<%= split.RecordType.toLowerCase() %>\"> <%= split.RecordType %> </span> </div> <% } %> </td> <td class=\"results-table__sub-cell\"> <%= split.Time ? split.Time : '-' %> </td> </tr> <% } ); %> </tbody> </table> </td> </tr> <% } %> <% } ); %> <tr> <td colspan=\"10\"> <div class=\"results-table__footer\"> <div class=\"results-table__legend\"> <%= render( {\n                                cssClass: 'results-table__legend-icon',\n                                name: 'info'\n                            }, 'common.render-svg' ) %> <%= render( {\n                                cssClass: 'u-hide-tablet',\n                                abbr: 'swimming.desktop'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-tablet u-hide-mobile',\n                                abbr: 'swimming.tablet'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-mobile u-hide-small-mobile',\n                                abbr: 'swimming.mobile'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-small-mobile',\n                                abbr: 'swimming.mobileSmall',\n                                asterisk: 'swimming'\n                            }, 'common.render-legend-item' ) %> </div> <div class=\"results-table__sponsor js-results-table-sponsor\"></div> </div> </td> </tr> </tbody> </table> <% } else { %> <div class=\"results-table__empty-table\"> <%= PULSE.I18N.lookup( 'label.empty.state.resultsTable' ) %> </div> <% } %>");
PULSE.app.templates['results-table.table-sy'] = _.template("<% if ( unitData.Results && unitData.Results.length ) { %> <table class=\"results-table__table results-table__table--sy\"> <thead> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption\" colspan=\"4\"> <%= render( {\n                        cssClass: 'results-table__caption-icon',\n                        name: 'info'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.resultsTable.caption' ) %> </td> </tr> <tr class=\"u-show-tablet\"> <td class=\"results-table__caption results-table__caption--mob-swipe\" colspan=\"10\"> <%= render( {\n                        cssClass: 'results-table__caption-icon results-table__caption-icon--mob-swipe',\n                        name: 'touch'\n                    }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.table.mobileSwipePrompt' ) %> </td> </tr> <tr class=\"results-table__header-row\"> <th class=\"results-table__header-cell results-table__header-cell--small u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.rank' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small u-show-tablet\" aria-hidden=\"true\"><%= PULSE.I18N.lookup( 'label.table.header.rank.short' ) %></th> <% if ( unitData.IsTeamEvent ) { %> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <% if ( isOlyimpicGames && unitData.Name == 'Finals Summary' ) { %> <% _.each( unitData.CumulativeItemNames, function( cumulativeName, index ) { %> <th class=\"results-table__header-cell u-hide-desktop\"><%= cumulativeName %></th> <% } ); %> <% } else { %> <th class=\"results-table__header-cell u-hide-tablet\"><%= unitData.Panel1Name %></th> <th class=\"results-table__header-cell u-hide-tablet\"><%= unitData.Panel2Name %></th> <th class=\"results-table__header-cell u-hide-tablet\"><%= unitData.Panel3Name %></th> <% } %> <% if ( isOlyimpicGames && unitData.Name !== 'Finals Summary' ) { %> <th class=\"results-table__header-cell u-hide-tablet\">Penalty</th> <% } else if ( !isOlyimpicGames ) { %> <th class=\"results-table__header-cell u-hide-tablet\">Penalty</th> <% } %> <% } else { %> <% if ( isOlyimpicGames && unitData.Name == 'Finals Summary' ) { %> <th class=\"results-table__header-cell u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--medium u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <% _.each( unitData.CumulativeItemNames, function( cumulativeName, index ) { %> <th class=\"results-table__header-cell u-hide-desktop\"><%= cumulativeName %></th> <% } ); %> <% } else { %> <th class=\"results-table__header-cell u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--medium u-text-left u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <th class=\"results-table__header-cell u-hide-desktop\"><%= unitData.Panel1Name %></th> <th class=\"results-table__header-cell u-hide-desktop\"><%= unitData.Panel2Name %></th> <th class=\"results-table__header-cell u-hide-desktop\"><%= unitData.Panel3Name %></th> <th class=\"results-table__header-cell u-hide-desktop\">Penalty</th> <% } %> <% } %> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.points' ) %></th> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.pointsBehind' ) %></th> <% if ( unitData.IsTeamEvent ) { %> <th class=\"results-table__header-cell u-hide-tablet\"></th> <% } else { %> <th class=\"results-table__header-cell u-hide-tablet u-show-desktop\"></th> <% } %> </tr> </thead> <tbody> <% _.each( unitData.Results, function( result, index ) { %> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row\"> <td class=\"results-table__cell <%= result.MedalTag ? 'results-table__cell--' + result.MedalTag.toLowerCase() : '' %> bold\"> <%= result.Rank %> <% if ( result.MedalTag ) { %> <%= render( {\n                                cssClass: 'results-table__medal u-hide-tablet',\n                                name: 'medal'\n                            }, 'common.render-svg' ) %> <% } %> </td> <% if ( unitData.IsTeamEvent ) { %> <td class=\"results-table__cell u-text-left\"> <div class=\"results-table__country\"> <%= render( {\n                                    cssClass: 'results-table__country-flag',\n                                    countryCode: result.NAT\n                                }, 'common.flag' ) %> <%= result.NAT %> </div> </td> <% if ( isOlyimpicGames && unitData.Name == 'Finals Summary' ) { %> <% _.each( result.CumulativeResults, function( cumulativeResult, index ) { %> <td class=\"results-table__cell u-hide-tablet\"><%= cumulativeResult.TotalPoints ? cumulativeResult.TotalPoints : '-' %>  <% } ); %> <% } else { %> </td><td class=\"results-table__cell u-hide-tablet\"><%= result.Panel1Score ? result.Panel1Score : '-' %></td> <td class=\"results-table__cell u-hide-tablet\"><%= result.Panel2Score ? result.Panel2Score : '-' %></td> <td class=\"results-table__cell u-hide-tablet\"><%= result.Panel3Score ? result.Panel3Score : '-' %></td> <% } %> <% if ( isOlyimpicGames && unitData.Name !== 'Finals Summary' ) { %> <td class=\"results-table__cell u-hide-tablet\"><%= result.Penalty ? result.Penalty : '-' %></td> <% } else if ( !isOlyimpicGames ) { %> <td class=\"results-table__cell u-hide-tablet\"><%= result.Penalty ? result.Penalty : '-' %></td> <% } %> <% } else { %> <td class=\"results-table__cell u-text-left u-hide-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                    cssClass: 'results-table__country-flag',\n                                    countryCode: result.NAT\n                                }, 'common.flag' ) %> <%= result.NAT %> </div> </td> <td class=\"results-table__cell u-text-left\"> <% if ( result.Competitors && result.Competitors.length ) { %> <% _.each( result.Competitors, function( competitor, index ) { %> <% if ( competitor.athleteLink ) { %> <a class=\"results-table__athlete-link results-table__athlete-link--multiple <%= competitor.Reserve ? 'results-table__athlete-link--reserve' : '' %>\" href=\"<%= competitor.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-mobile\"> <%= render( {\n                                                    cssClass: 'results-table__athlete-image',\n                                                    id: competitor.ResultId,\n                                                    size: 'TABLE',\n                                                    objectFit: true\n                                                }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                        cssClass: 'results-table__athlete-arrow',\n                                                        name: 'arrow-forward'\n                                                    }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= competitor.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= competitor.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                            cssClass: 'results-table__athlete-country-flag',\n                                                            countryCode: competitor.NAT\n                                                        }, 'common.flag' ) %> <%= competitor.NAT %> </div> <span class=\"results-table__athlete-more results-table__athlete-more--country u-show-mobile\"> <%= render( {\n                                                            cssClass: 'results-table__athlete-arrow',\n                                                            name: 'arrow-forward'\n                                                        }, 'common.render-svg' ) %> </span> </span> </div> <% if ( competitor.Reserve ) { %> <span class=\"results-table__athlete-reserve results-table__athlete-reserve--name u-show-tablet\"> <%= competitor.ReserveInfo %> </span> <% } %> </a> <% } else { %> <div class=\"results-table__athlete-link results-table__athlete-link--multiple <%= competitor.Reserve ? 'results-table__athlete-link--reserve' : '' %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-mobile\"> <%= render( {\n                                                    cssClass: 'results-table__athlete-image',\n                                                    id: competitor.ResultId,\n                                                    size: 'TABLE',\n                                                    objectFit: true\n                                                }, 'common.athlete-headshot' ) %> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= competitor.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= competitor.LastName %> </span> <span class=\"results-table__athlete-country u-show-tablet\"> <div class=\"results-table__country\"> <%= render( {\n                                                            cssClass: 'results-table__athlete-country-flag',\n                                                            countryCode: competitor.NAT\n                                                        }, 'common.flag' ) %> <%= competitor.NAT %> </div> </span> </div> <% if ( competitor.Reserve ) { %> <span class=\"results-table__athlete-reserve u-show-tablet\"> <%= competitor.ReserveInfo %> </span> <% } %> </div> <% } %> <% } ); %> <% } %> </td> <td class=\"results-table__cell u-text-left u-hide-tablet\"> <% if ( result.Competitors.length > 1 ) { %> <% _.each( result.Competitors, function( competitor, index ) { %> <span class=\"results-table__athlete-age <%= competitor.Reserve ? 'results-table__athlete-age--reserve' : '' %>\"> <%= competitor.AthleteResultAge ? competitor.AthleteResultAge : PULSE.I18N.lookup( 'label.na' ) %> <% if ( competitor.Reserve ) { %> <span class=\"results-table__athlete-reserve\"> <%= competitor.ReserveInfo %> </span> <% } %> </span> <% } ); %> <% } else { %> <%= result.Competitors[ 0 ].AthleteResultAge ? result.Competitors[ 0 ].AthleteResultAge : PULSE.I18N.lookup( 'label.na' ) %> <% } %> </td> <% if ( isOlyimpicGames && unitData.Name == 'Finals Summary' ) { %> <% _.each( result.CumulativeResults, function( cumulativeResult, index ) { %> <td class=\"results-table__cell u-hide-tablet\"><%= cumulativeResult.TotalPoints ? cumulativeResult.TotalPoints : '-' %>  <% } ); %> <% } else { %> </td><td class=\"results-table__cell u-hide-desktop\"><%= result.Panel1Score ? result.Panel1Score : '-' %></td> <td class=\"results-table__cell u-hide-desktop\"><%= result.Panel2Score ? result.Panel2Score : '-' %></td> <td class=\"results-table__cell u-hide-desktop\"><%= result.Panel3Score ? result.Panel3Score : '-' %></td> <% } %> <% if ( isOlyimpicGames && unitData.Name !== 'Finals Summary' ) { %> <td class=\"results-table__cell u-hide-tablet\"><%= result.Penalty ? result.Penalty : '-' %></td> <% } else if ( !isOlyimpicGames ) { %> <td class=\"results-table__cell u-hide-tablet\"><%= result.Penalty ? result.Penalty : '-' %></td> <% } %> <% } %> <% if ( result.ScoringAbbr ) { %> <td class=\"results-table__cell\"> <%= result.ScoringAbbr %> </td> <% } else if ( result.TotalPoints ) { %> <td class=\"results-table__cell results-table__cell--highlight black\"> <% if ( result.Qualified && result.Qualified === 'Q' ) { %> <span class=\"results-table__qualified\"><%= PULSE.I18N.lookup( 'label.qualified' ) %></span> <% } %> <%= result.TotalPoints %> </td> <% } else { %> <td class=\"results-table__cell\"> - </td> <% } %> <td class=\"results-table__cell\"><%= result.PointsBehind ? result.PointsBehind : '-' %></td> <% if ( unitData.IsTeamEvent ) { %> <td class=\"results-table__cell results-table__cell--no-padding\"> <button class=\"results-table__expand-btn results-table__expand-btn--hide-tablet js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> </td> <% } else { %> <td class=\"results-table__cell results-table__cell--no-padding u-show-desktop\"> <button class=\"results-table__expand-btn results-table__expand-btn--hide-tablet js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> </td> <% } %> </tr> <tr class=\"results-table__expandable\"> <td colspan=\"8\"> <table class=\"results-table__sub-table <%= unitData.IsTeamEvent ? 'u-show-tablet' : 'u-show-desktop' %>\"> <thead> <tr class=\"results-table__sub-row\"> <th class=\"results-table__sub-header-cell\"><%= unitData.Panel1Name %></th> <th class=\"results-table__sub-header-cell\"><%= unitData.Panel2Name %></th> <th class=\"results-table__sub-header-cell\"><%= unitData.Panel3Name %></th> <th class=\"results-table__sub-header-cell\">Penalty</th> </tr> </thead> <tbody> <tr class=\"results-table__sub-row\"> <td class=\"results-table__sub-cell\"><%= result.Panel1Score ? result.Panel1Score : '-' %></td> <td class=\"results-table__sub-cell\"><%= result.Panel2Score ? result.Panel2Score : '-' %></td> <td class=\"results-table__sub-cell\"><%= result.Panel3Score ? result.Panel3Score : '-' %></td> <td class=\"results-table__sub-cell\"><%= result.Penalty ? result.Penalty : '-' %></td> </tr> </tbody> </table> <% if ( unitData.IsTeamEvent ) { %> <table class=\"results-table__sub-table results-table__sub-table--small\"> <thead> <tr class=\"results-table__sub-header-row\"> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--x-large u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athletes' ) %></th> <th class=\"results-table__sub-header-cell u-hide-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <th class=\"results-table__sub-header-cell u-show-tablet\"><%= PULSE.I18N.lookup( 'label.table.header.reserve' ) %></th> </tr> </thead> <tbody> <% _.each( result.Team.Competitors, function( competitor, index ) { %> <tr class=\"results-table__sub-row\"> <td class=\"results-table__sub-cell\"> <% if ( competitor.athleteLink ) { %> <a class=\"results-table__athlete-link <% competitor.Reserve ? 'results-table__athlete-link--reserve-member': '' %>\" href=\"<%= competitor.athleteLink %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <%= render( {\n                                                                cssClass: 'results-table__athlete-image',\n                                                                id: competitor.ResultId,\n                                                                size: 'TABLE',\n                                                                objectFit: true\n                                                            }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                                    cssClass: 'results-table__athlete-arrow',\n                                                                    name: 'arrow-forward'\n                                                                }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= competitor.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= competitor.LastName %> </span> </div> <% if ( competitor.Reserve ) { %> <span class=\"results-table__athlete-reserve u-hide-tablet\"> <%= competitor.ReserveInfo %> </span> <% } %> </a> <% } else { %> <div class=\"results-table__athlete-link <% competitor.Reserve ? 'results-table__athlete-link--reserve-member': '' %>\"> <div class=\"results-table__athlete-image-container results-table__athlete-image-container--hide-small-mobile\"> <div class=\"results-table__athlete-image\"> <%= render( {\n                                                                    cssClass: 'results-table__athlete-silhouette',\n                                                                    name: 'athlete-silhouette'\n                                                                }, 'common.render-svg' ) %> </div> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                                    cssClass: 'results-table__athlete-arrow',\n                                                                    name: 'arrow-forward'\n                                                                }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= competitor.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= competitor.LastName %> </span> </div> <% if ( competitor.Reserve ) { %> <span class=\"results-table__athlete-reserve u-hide-tablet\"> <%= competitor.ReserveInfo %> </span> <% } %> </div> <% } %> </td> <td class=\"results-table__sub-cell u-hide-tablet\"><%= competitor.AthleteResultAge %></td> <td class=\"results-table__sub-cell u-show-tablet\"> <% if ( competitor.Reserve ) { %> <span class=\"results-table__athlete-reserve\"> <%= competitor.ReserveInfo %> </span> <% } %> </td> </tr> <% } ); %> </tbody> </table> <% } %> </td> </tr> <% } ); %> <tr> <td colspan=\"9\"> <div class=\"results-table__footer\"> <div class=\"results-table__legend\"> <%= render( {\n                                cssClass: 'results-table__legend-icon',\n                                name: 'info'\n                            }, 'common.render-svg' ) %> <%= render( {\n                                cssClass: 'u-hide-tablet',\n                                abbr: 'artisticSwimming.desktop'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-tablet u-hide-mobile',\n                                abbr: 'artisticSwimming.tablet'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-mobile u-hide-small-mobile',\n                                abbr: 'artisticSwimming.mobile'\n                            }, 'common.render-legend-item' ) %> <%= render( {\n                                cssClass: 'u-show-small-mobile',\n                                abbr: 'artisticSwimming.mobileSmall',\n                                asterisk: 'artisticSwimming'\n                            }, 'common.render-legend-item' ) %> </div> <div class=\"results-table__sponsor js-results-table-sponsor\"></div> </div> </td> </tr> </tbody> </table> <% } else { %> <div class=\"results-table__empty-table\"> <%= PULSE.I18N.lookup( 'label.empty.state.resultsTable' ) %> </div> <% } %>");
PULSE.app.templates['results-table.table-wp'] = _.template("<% if ( unitData && ( unitData.rounds.length ) || ( !_.isEmpty( unitData.standings ) ) ) { %> <div class=\"results-table__table\"> <% if ( !_.isEmpty( unitData.standings ) ) { %> <table class=\"results-table__table results-table__table--wp is-active\"> <thead> <% if ( !unitData.isFinalStandings ) { %> <tr> <td colspan=\"11\"> <h3 class=\"results-table__table-title\"><%= PULSE.I18N.lookup( 'label.table.standings' ) %></h3> </td> </tr> <% } %> <tr class=\"results-table__header-row\"> <th class=\"results-table__header-cell results-table__header-cell--small\"> <span class=\"u-hide-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.rank' ) %> </span> <span class=\"u-show-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.rank.short' ) %> </span> </th> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.country' ) %></th> <% if ( unitData.isFinalStandings ) { %> <th class=\"results-table__header-cell results-table__header-cell--small\"></th> <% } else if ( unitData.standings.Results && unitData.standings.Results.length ) { %> <th class=\"results-table__header-cell\"> <span class=\"u-hide-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.matches' ) %> </span> <span class=\"u-show-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.matches.short' ) %> </span> </th> <th class=\"results-table__header-cell\"> <span class=\"u-hide-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.won' ) %> </span> <span class=\"u-show-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.won.short' ) %> </span> </th> <th class=\"results-table__header-cell\"> <span class=\"u-hide-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.lost' ) %> </span> <span class=\"u-show-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.lost.short' ) %> </span> </th> <th class=\"results-table__header-cell\"> <span class=\"u-hide-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.tied' ) %> </span> <span class=\"u-show-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.tied.short' ) %> </span> </th> <% if ( unitData.standings.Results[ 0 ].GoalsFor !== null ) { %> <th class=\"results-table__header-cell u-hide-small-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.goalsFor.short' ) %></th> <% } %> <% if ( unitData.standings.Results[ 0 ].GoalsAgainst !== null ) { %> <th class=\"results-table__header-cell u-hide-small-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.goalsAgainst.short' ) %></th> <% } %> <% if ( unitData.standings.Results[ 0 ].GoalsDifference !== null ) { %> <th class=\"results-table__header-cell u-hide-small-mobile\"><%= PULSE.I18N.lookup( 'label.table.header.goalDifference.short' ) %></th> <% } %> <% if ( unitData.standings.Results[ 0 ].ClassificationPoints !== null ) { %> <th class=\"results-table__header-cell\"> <span class=\"u-hide-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.points' ) %> </span> <span class=\"u-show-tablet\"> <%= PULSE.I18N.lookup( 'label.table.header.points.short' ) %> </span> </th> <% } %> <% } %> </tr> </thead> <tbody> <% if ( unitData.standings.Results && unitData.standings.Results.length ) { %> <% _.each( unitData.standings.Results, function( result, index ) { %> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row\"> <td class=\"results-table__cell <%= result.MedalTag ? 'results-table__cell--' + result.MedalTag.toLowerCase() : '' %> bold\"> <%= result.Rank ? result.Rank : '-' %> <% if ( result.MedalTag ) { %> <%= render( {\n                                            cssClass: 'results-table__medal u-hide-tablet',\n                                            name: 'medal'\n                                        }, 'common.render-svg' ) %> <% } %> </td> <td class=\"results-table__cell u-text-left\"> <div class=\"results-table__country\"> <%= render( {\n                                            cssClass: 'results-table__country-flag',\n                                            countryCode: result.NAT\n                                        }, 'common.flag' ) %> <% if ( result.NatName ) { %> <%= result.NAT === 'CLB' ? result.ClubName : result.NATName %> <% } else { %> <%= result.NAT === 'CLB' ? result.ClubName : result.NAT %> <% } %> </div> </td> <% if ( unitData.isFinalStandings && result.TeamMembers && result.TeamMembers.length ) { %> <td class=\"results-table__cell\"> <button class=\"results-table__expand-btn js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> </td> <% } else { %> <td class=\"results-table__cell\"><%= result.MatchesPlayed !== null ? result.MatchesPlayed : '-' %></td> <td class=\"results-table__cell\"><%= result.MatchesWon !== null ? result.MatchesWon : '-' %></td> <td class=\"results-table__cell\"><%= result.MatchesLost !== null ? result.MatchesLost : '-' %></td> <td class=\"results-table__cell\"><%= result.MatchesTies !== null ? result.MatchesTies : '-' %></td> <% if ( result.GoalsFor !== null ) { %> <td class=\"results-table__cell u-hide-small-mobile\"><%= result.GoalsFor %></td> <% } %> <% if ( result.GoalsAgainst !== null ) { %> <td class=\"results-table__cell u-hide-small-mobile\"><%= result.GoalsAgainst %></td> <% } %> <% if ( result.GoalsDifference !== null ) { %> <td class=\"results-table__cell u-hide-small-mobile\"><%= result.GoalsDifference %></td> <% } %> <% if ( result.ClassificationPoints !== null ) { %> <td class=\"results-table__cell results-table__cell--highlight black\"><%= result.ClassificationPoints %></td> <% } %> <% } %> </tr> <% if ( unitData.isFinalStandings && result.TeamMembers && result.TeamMembers.length ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"11\"> <table class=\"results-table__sub-table results-table__sub-table--small\"> <thead> <tr class=\"results-table__sub-header-row\"> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--x-large u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athlete' ) %></th> <th class=\"results-table__sub-header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> </tr> </thead> <tbody> <% _.each( result.TeamMembers, function( athlete, index ) { %> <tr class=\"results-table__sub-row\"> <td class=\"results-table__sub-cell u-text-left\"> <% if ( athlete.athleteLink ) { %> <a class=\"results-table__athlete-link\" href=\"<%= athlete.athleteLink %>\"> <div class=\"results-table__athlete-image-container\"> <%= render( {\n                                                                            cssClass: 'results-table__athlete-image',\n                                                                            id: athlete.ResultId,\n                                                                            size: 'TABLE',\n                                                                            objectFit: true\n                                                                        }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                                                cssClass: 'results-table__athlete-arrow',\n                                                                                name: 'arrow-forward'\n                                                                            }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= athlete.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= athlete.LastName %> </span> </div> </a> <% } else { %> <div class=\"results-table__athlete-link\"> <div class=\"results-table__athlete-image-container\"> <%= render( {\n                                                                            cssClass: 'results-table__athlete-image',\n                                                                            id: athlete.ResultId,\n                                                                            size: 'TABLE',\n                                                                            objectFit: true\n                                                                        }, 'common.athlete-headshot' ) %> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= athlete.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= athlete.LastName %> </span> </div> </div> <% } %> </td> <td class=\"results-table__sub-cell\"> <%= athlete.AthleteResultAge ? athlete.AthleteResultAge : '-' %> </td> </tr> <% } ); %> </tbody> </table> </td> </tr> <% } %> <% } ); %> <% } %> </tbody> </table> <% } %> <% if ( unitData.rounds.length ) { %> <% _.each( unitData.rounds, function( round ) { %> <%= render( {\n                    unitData: unitData,\n                    round: round\n                }, 'results-table.wp-matches-table' ) %> <% }) %> <% } %> </div> <% } else { %> <div class=\"results-table__empty-table\"> <%= PULSE.I18N.lookup( 'label.empty.state.resultsTable' ) %> </div> <% } %>");
PULSE.app.templates['results-table.timing-partner'] = _.template("<div class=\"timing-partner\" data-widget=\"lazy-load-images\"> <h4 class=\"timing-partner__title\"><%= data.title %></h4> <% if ( typeof data.links !== 'undefined' && data.links.length ) { %> <a class=\"timing-partner__image-container placeholder placeholder--dark\" href=\"<%= data.links[ 0 ].promoUrl %>\"> <%= render( { data: {\n                title: data.title,\n                cssClass: 'timing-partner__image',\n                mediaQueryConfig: data.mediaQueryConfig,\n                objectFit: true\n            } }, 'common.lazy-image' ) %> </a> <% } else { %> <div class=\"timing-partner__image-container placeholder placeholder--dark\"> <%= render( { data: {\n                title: data.title,\n                cssClass: 'timing-partner__image',\n                mediaQueryConfig: data.mediaQueryConfig,\n                objectFit: true\n            } }, 'common.lazy-image' ) %> </div> <% } %> </div>");
PULSE.app.templates['results-table.unit-selector-wp'] = _.template("<div class=\"<%= typeof cssClass !== 'undefined' ? cssClass : '' %> unit-selector\" data-widget=\"unit-selector\" data-unit-total=\"<%= units.length %>\"> <button class=\"unit-selector__paginate unit-selector__paginate--back js-unit-selector-back u-hide-tablet\"> <%= render( {\n            cssClass: 'unit-selector__paginate-icon',\n            name: 'chevron-left'\n        }, 'common.render-svg' ) %> </button> <ol class=\"unit-selector__list js-unit-selector-list\"> <% _.each( units, function( unit, index ) { %> <li class=\"unit-selector__unit\"> <button class=\"unit-selector__unit-select js-results-unit\" data-unit-index=\"<%= index %>\" data-unit-name=\"<%= unit.phaseName %>\"> <% if ( !_.isEmpty( unit.standings ) && unit.standings.ResultStatus ) { %> <%= render( { status: unit.standings.ResultStatus, cssClass: 'unit-selector__unit-status' }, 'results-table.status-tag' ) %> <% } else if ( unit.isLive ) { %> <%= render( { status: 'LIVE', cssClass: 'unit-selector__unit-status' }, 'results-table.status-tag' ) %> <% } else if ( unit.isOfficial ) { %> <%= render( { status: 'OFFICIAL', cssClass: 'unit-selector__unit-status' }, 'results-table.status-tag' ) %> <% } %> <span class=\"unit-selector__unit-name\"><%= unit.phaseName %></span> </button> </li> <% } ); %> </ol> <button class=\"unit-selector__paginate unit-selector__paginate--forward is-active js-unit-selector-forward u-hide-tablet\"> <%= render( {\n            cssClass: 'unit-selector__paginate-icon',\n            name: 'chevron-right'\n        }, 'common.render-svg' ) %> </button> </div>");
PULSE.app.templates['results-table.unit-selector'] = _.template("<div class=\"<%= typeof cssClass !== 'undefined' ? cssClass : '' %> unit-selector\" data-widget=\"unit-selector\" data-unit-total=\"<%= units.length %>\"> <button class=\"unit-selector__paginate unit-selector__paginate--back js-unit-selector-back u-hide-tablet\"> <%= render( {\n            cssClass: 'unit-selector__paginate-icon',\n            name: 'chevron-left'\n        }, 'common.render-svg' ) %> </button> <ol class=\"unit-selector__list js-unit-selector-list\"> <% _.each( units, function( unit, index ) { %> <li class=\"unit-selector__unit\"> <button class=\"unit-selector__unit-select js-results-unit\" data-unit-id=\"<%= unit.PhaseId %>\" data-unit-name=\"<%= unit.Name %>\"> <% if ( unit.ResultStatus ) { %> <%= render( { status: unit.ResultStatus, cssClass: 'unit-selector__unit-status' }, 'results-table.status-tag' ) %> <% } %> <span class=\"unit-selector__unit-name\"><%= unit.Name %></span> <% if ( unit.formattedDate ) { %> <span class=\"unit-selector__unit-datetime\"><%= unit.formattedDate %></span> <% } %> </button> </li> <% } ); %> </ol> <button class=\"unit-selector__paginate unit-selector__paginate--forward is-active js-unit-selector-forward u-hide-tablet\"> <%= render( {\n            cssClass: 'unit-selector__paginate-icon',\n            name: 'chevron-right'\n        }, 'common.render-svg' ) %> </button> </div>");
PULSE.app.templates['results-table.wp-matches-table'] = _.template("<table class=\"results-table__table results-table__table--wp results-table__table--wp-matches is-active\"> <thead> <% if ( !_.isEmpty( unitData.standings ) ) { %> <tr> <td colspan=\"8\"> <h3 class=\"results-table__table-title\"><%= round.title %></h3> </td> </tr> <% } %> <tr> <td class=\"results-table__caption u-show-tablet\" colspan=\"8\"> <%= render( {\n                    cssClass: 'results-table__caption-icon',\n                    name: 'info'\n                }, 'common.render-svg' ) %> <%= PULSE.I18N.lookup( 'label.resultsTable.waterPolo.caption' ) %> </td> </tr> <tr class=\"results-table__header-row u-hide-tablet\"> <th class=\"results-table__header-cell results-table__header-cell--x-small\"><%= PULSE.I18N.lookup( 'label.table.header.match' ) %></th> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.matchName' ) %></th> <th class=\"results-table__header-cell u-text-left\">*<%= PULSE.I18N.lookup( 'label.table.header.date' ) %></th> <th class=\"results-table__header-cell\">*<%= PULSE.I18N.lookup( 'label.table.header.time' ) %></th> <th class=\"results-table__header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.teams' ) %></th> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.quarterScores' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--no-padding\"></th> <th class=\"results-table__header-cell\"><%= PULSE.I18N.lookup( 'label.table.header.score' ) %></th> <th class=\"results-table__header-cell results-table__header-cell--small results-table__header-cell--no-padding u-hide-tablet\"></th> </tr> </thead> <tbody> <% _.each( round.matches, function( unit, index ) { %> <% var localDate = unit.UtcDateTime ? PULSE.app.common.date.getLocalDate(unit.UtcDateTime) : PULSE.I18N.lookup( 'label.competition.tbc' ); %> <% var localTime = unit.UtcDateTime ? PULSE.app.common.date.getLocalTime(unit.UtcDateTime) : PULSE.I18N.lookup( 'label.competition.tbc' ); %> <tr class=\"u-show-tablet\"> <td class=\"results-table__cell results-table__cell--no-padding results-table__cell--match-header\" colspan=\"9\"> <div class=\"results-table__match-header\"> <div class=\"results-table__match-header-group\"> <span class=\"results-table__match-header-item\"> <%= render( { status: unit.ResultStatus, cssClass: 'results-table__match-header-status' }, 'results-table.status-tag' ) %> </span> <span class=\"results-table__match-header-item results-table__match-header-item--name\"> <%= unit.Name %> <% if ( unit.medalString ) { %> <%= render( {\n                                        cssClass: 'results-table__match-header-medal results-table__match-header-medal--' + unit.medalString,\n                                        name: 'medal'\n                                    }, 'common.render-svg' ) %> <% } %> </span> </div> <div class=\"results-table__match-header-group\"> <span class=\"results-table__match-header-item\"><%= localDate ? localDate : PULSE.I18N.lookup( 'label.competition.tbc' ) %></span> <span class=\"results-table__match-header-divider\"></span> <span class=\"results-table__match-header-item\"><%= localTime %></span> </div> </div> </td> </tr> <tr class=\"results-table__row <%= index % 2 ? 'results-table__row--odd' : '' %> js-results-table-row\"> <td class=\"results-table__cell u-hide-tablet\"><%= unit.Results[ 0 ].MatchNo %></td> <td class=\"results-table__cell results-table__cell--wrap u-text-left u-hide-tablet\"> <span class=\"results-table__match-name\"><%= unit.Name %></span> <%= render( { status: unit.ResultStatus, cssClass: 'results-table__status' }, 'results-table.status-tag' ) %> </td> <td class=\"results-table__cell u-text-left u-hide-tablet\"><%= localDate ? localDate : PULSE.I18N.lookup( 'label.competition.tbc' ) %></td> <td class=\"results-table__cell u-hide-tablet\"><%= localTime %></td> <td class=\"results-table__cell u-text-left\"> <div class=\"results-table__countries\"> <div class=\"results-table__country results-table__country--stacked <%= unit.Results[ 0 ].FinalScoreHome !== null && unit.Results[ 0 ].FinalScoreAway !== null && unit.Results[ 0 ].FinalScoreHome > unit.Results[ 0 ].FinalScoreAway ? 'black' : '' %>\"> <%= render( {\n                                cssClass: 'results-table__country-flag',\n                                countryCode: unit.Results[ 0 ].TeamHomeCode\n                            }, 'common.flag' ) %> <span class=\"u-hide-phablet\"> <%= unit.Results[ 0 ].TeamHomeName %> </span> <span class=\"u-show-phablet\"> <%= unit.Results[ 0 ].TeamHomeCode %> </span> </div> <div class=\"results-table__country results-table__country--stacked <%= unit.Results[ 0 ].FinalScoreHome !== null && unit.Results[ 0 ].FinalScoreAway !== null && unit.Results[ 0 ].FinalScoreAway > unit.Results[ 0 ].FinalScoreHome ? 'black' : '' %>\"> <%= render( {\n                                cssClass: 'results-table__country-flag',\n                                countryCode: unit.Results[ 0 ].TeamAwayCode\n                            }, 'common.flag' ) %> <span class=\"u-hide-phablet\"> <%= unit.Results[ 0 ].TeamAwayName %> </span> <span class=\"u-show-phablet\"> <%= unit.Results[ 0 ].TeamAwayCode %> </span> </div> </div> </td> <td class=\"results-table__cell\"> <div class=\"results-table__scores\"> <div class=\"results-table__score-group results-table__score-group--quarter\"> <span class=\"results-table__score <%= unit.Results[ 0 ].Q1ScoreHome > unit.Results[ 0 ].Q1ScoreAway ? 'black' : '' %>\"> <%= unit.Results[ 0 ].Q1ScoreHome !== null ? unit.Results[ 0 ].Q1ScoreHome : '-' %> </span> <span class=\"results-table__quarter\"> <%= PULSE.I18N.lookup( 'match.quarter.short', { quarterNumber: '1' } ) %> </span> <span class=\"results-table__score <%= unit.Results[ 0 ].Q1ScoreAway > unit.Results[ 0 ].Q1ScoreHome ? 'black' : '' %>\"> <%= unit.Results[ 0 ].Q1ScoreAway !== null ? unit.Results[ 0 ].Q1ScoreAway : '-' %> </span> </div> <div class=\"results-table__score-group results-table__score-group--quarter\"> <span class=\"results-table__score <%= unit.Results[ 0 ].Q2ScoreHome > unit.Results[ 0 ].Q2ScoreAway ? 'black' : '' %>\"> <%= unit.Results[ 0 ].Q2ScoreHome !== null ? unit.Results[ 0 ].Q2ScoreHome : '-' %> </span> <span class=\"results-table__quarter\"> <%= PULSE.I18N.lookup( 'match.quarter.short', { quarterNumber: '2' } ) %> </span> <span class=\"results-table__score <%= unit.Results[ 0 ].Q2ScoreAway > unit.Results[ 0 ].Q2ScoreHome ? 'black' : '' %>\"> <%= unit.Results[ 0 ].Q2ScoreAway !== null ? unit.Results[ 0 ].Q2ScoreAway : '-' %> </span> </div> <div class=\"results-table__score-group results-table__score-group--quarter\"> <span class=\"results-table__score <%= unit.Results[ 0 ].Q3ScoreHome > unit.Results[ 0 ].Q3ScoreAway ? 'black' : '' %>\"> <%= unit.Results[ 0 ].Q3ScoreHome !== null ? unit.Results[ 0 ].Q3ScoreHome : '-' %> </span> <span class=\"results-table__quarter\"> <%= PULSE.I18N.lookup( 'match.quarter.short', { quarterNumber: '3' } ) %> </span> <span class=\"results-table__score <%= unit.Results[ 0 ].Q3ScoreAway > unit.Results[ 0 ].Q3ScoreHome ? 'black' : '' %>\"> <%= unit.Results[ 0 ].Q3ScoreAway !== null ? unit.Results[ 0 ].Q3ScoreAway : '-' %> </span> </div> <div class=\"results-table__score-group results-table__score-group--quarter\"> <span class=\"results-table__score <%= unit.Results[ 0 ].Q4ScoreHome > unit.Results[ 0 ].Q4ScoreAway ? 'black' : '' %>\"> <%= unit.Results[ 0 ].Q4ScoreHome !== null ? unit.Results[ 0 ].Q4ScoreHome : '-' %> </span> <span class=\"results-table__quarter\"> <%= PULSE.I18N.lookup( 'match.quarter.short', { quarterNumber: '4' } ) %> </span> <span class=\"results-table__score <%= unit.Results[ 0 ].Q4ScoreAway > unit.Results[ 0 ].Q4ScoreHome ? 'black' : '' %>\"> <%= unit.Results[ 0 ].Q4ScoreAway !== null ? unit.Results[ 0 ].Q4ScoreAway : '-' %> </span> </div> </div> </td> <td class=\"results-table__cell results-table__cell--no-padding\"> <% if ( unit.Results[ 0 ].ExtraTime1Home || unit.Results[ 0 ].ExtraTime1Away ) { %> <div class=\"results-table__penalty\"> <%= PULSE.I18N.lookup( 'match.extraTime.short' ) %> </div> <% } %> <% if ( unit.Results[ 0 ].PSOHome || unit.Results[ 0 ].PSOAway ) { %> <div class=\"results-table__penalty\"> <%= PULSE.I18N.lookup( 'match.penaltyShootOut.short' ) %> </div> <% } %> </td> <td class=\"results-table__cell results-table__cell--highlight\"> <div class=\"results-table__scores\"> <span class=\"results-table__score results-table__score--final <%= unit.Results[ 0 ].FinalScoreHome > unit.Results[ 0 ].FinalScoreAway ? 'black' : '' %>\"> <%= unit.Results[ 0 ].FinalScoreHome !== null ? unit.Results[ 0 ].FinalScoreHome : '-' %> </span> <span class=\"results-table__score results-table__score--final <%= unit.Results[ 0 ].FinalScoreAway > unit.Results[ 0 ].FinalScoreHome ? 'black' : '' %>\"> <%= unit.Results[ 0 ].FinalScoreAway !== null ? unit.Results[ 0 ].FinalScoreAway : '-' %> </span> </div> </td> <% if ( unit.Results[ 0 ].TeamHomeMembers || unit.Results[ 0 ].TeamAwayMembers ) { %> <td class=\"results-table__cell results-table__cell--no-padding\"> <button class=\"results-table__expand-btn results-table__expand-btn--hide-tablet js-results-row-expand\" title=\"Expand Row\"> <span class=\"results-table__expand results-table__expand--vertical\"></span> <span class=\"results-table__expand results-table__expand--horizontal\"></span> </button> </td> <% } %> </tr> <% if ( unit.Results[ 0 ].TeamHomeMembers || unit.Results[ 0 ].TeamAwayMembers ) { %> <tr class=\"results-table__expandable\"> <td colspan=\"9\"> <% if ( unit.Results[ 0 ].PSOHome || unit.Results[ 0 ].PSOAway || unit.Results[ 0 ].ExtraTime1Home || unit.Results[ 0 ].ExtraTime1Away ) { %> <table class=\"results-table__sub-table results-table__sub-table--x-small results-table__sub-table--extra-spacing\"> <thead> <tr> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--no-border results-table__sub-header-cell--no-padding black\"><%= PULSE.I18N.lookup( 'match.extraTime.short' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--no-border results-table__sub-header-cell--no-padding black\"><%= PULSE.I18N.lookup( 'match.penaltyShootOut.short' ) %></th> </tr> </thead> <tbody> <tr class=\"results-table__sub-row\"> <td class=\"results-table__sub-cell results-table__sub-cell--no-padding results-table__sub-cell--border-right\"> <div class=\"results-table__scores\"> <div class=\"results-table__score-group results-table__score-group--extra\"> <span class=\"results-table__score <%= unit.Results[ 0 ].ExtraTime1Home > unit.Results[ 0 ].ExtraTime1Away ? 'black' : '' %>\"> <%= unit.Results[ 0 ].ExtraTime1Home !== null ? unit.Results[ 0 ].ExtraTime1Home : '-' %> </span> <span class=\"results-table__quarter\"> <%= PULSE.I18N.lookup( 'match.extraTimeNumber.short', { extraTimeNumber: '1' } ) %> </span> <span class=\"results-table__score <%= unit.Results[ 0 ].ExtraTime1Away > unit.Results[ 0 ].ExtraTime1Home ? 'black' : '' %>\"> <%= unit.Results[ 0 ].ExtraTime1Away !== null ? unit.Results[ 0 ].ExtraTime1Away : '-' %> </span> </div> <div class=\"results-table__score-group results-table__score-group--extra\"> <span class=\"results-table__score <%= unit.Results[ 0 ].ExtraTime2Home > unit.Results[ 0 ].ExtraTime2Away ? 'black' : '' %>\"> <%= unit.Results[ 0 ].ExtraTime2Home !== null ? unit.Results[ 0 ].ExtraTime2Home : '-' %> </span> <span class=\"results-table__quarter\"> <%= PULSE.I18N.lookup( 'match.extraTimeNumber.short', { extraTimeNumber: '2' } ) %> </span> <span class=\"results-table__score <%= unit.Results[ 0 ].ExtraTime2Away > unit.Results[ 0 ].ExtraTime2Home ? 'black' : '' %>\"> <%= unit.Results[ 0 ].ExtraTime2Away !== null ? unit.Results[ 0 ].ExtraTime2Away : '-' %> </span> </div> <div class=\"results-table__score-group results-table__score-group--extra\"> <span class=\"results-table__score <%= unit.Results[ 0 ].ExtraTime3Home > unit.Results[ 0 ].ExtraTime3Away ? 'black' : '' %>\"> <%= unit.Results[ 0 ].ExtraTime3Home !== null ? unit.Results[ 0 ].ExtraTime3Home : '-' %> </span> <span class=\"results-table__quarter\"> <%= PULSE.I18N.lookup( 'match.extraTimeNumber.short', { extraTimeNumber: '3' } ) %> </span> <span class=\"results-table__score <%= unit.Results[ 0 ].ExtraTime3Away > unit.Results[ 0 ].ExtraTime3Home ? 'black' : '' %>\"> <%= unit.Results[ 0 ].ExtraTime3Away !== null ? unit.Results[ 0 ].ExtraTime2Away : '-' %> </span> </div> </div> </td> <td class=\"results-table__sub-cell results-table__sub-cell--no-padding\"> <div class=\"results-table__scores\"> <span class=\"results-table__score results-table__score--final <%= unit.Results[ 0 ].PSOHome > unit.Results[ 0 ].PSOAway ? 'black' : '' %>\"> <%= unit.Results[ 0 ].PSOHome !== null ? unit.Results[ 0 ].PSOHome : '-' %> </span> <span class=\"results-table__score results-table__score--final <%= unit.Results[ 0 ].PSOAway > unit.Results[ 0 ].PSOHome ? 'black' : '' %>\"> <%= unit.Results[ 0 ].PSOAway !== null ? unit.Results[ 0 ].PSOAway : '-' %> </span> </div> </td> </tr> </tbody> </table> <% } %> <div class=\"results-table__sub-table-group\"> <% if ( unit.Results[ 0 ].TeamHomeMembers ) { %> <table class=\"results-table__sub-table\"> <thead> <tr> <td class=\"results-table__sub-table-caption\" colspan=\"4\"> <div class=\"results-table__country\"> <%= render( {\n                                                        cssClass: 'results-table__country-flag',\n                                                        countryCode: unit.Results[ 0 ].TeamHomeCode\n                                                    }, 'common.flag' ) %> <%= unit.Results[ 0 ].TeamHomeName %> </div> </td> </tr> <tr> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.capNumber.abbr' ) %></th> <th class=\"results-table__sub-header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athletes' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-hide-phablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.position' ) %></th> </tr> </thead> <tbody> <% _.each( unit.Results[ 0 ].TeamHomeMembers, function( athlete, index ) { %> <tr class=\"results-table__sub-row\"> <td class=\"results-table__sub-cell\"><%= athlete.CapNumber %></td> <td class=\"results-table__sub-cell u-text-left\"> <% if ( athlete.athleteLink ) { %> <a class=\"results-table__athlete-link\" href=\"<%= athlete.athleteLink %>\"> <div class=\"results-table__athlete-image-container\"> <%= render( {\n                                                                    cssClass: 'results-table__athlete-image',\n                                                                    id: athlete.ResultId,\n                                                                    size: 'TABLE',\n                                                                    objectFit: true\n                                                                }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                                        cssClass: 'results-table__athlete-arrow',\n                                                                        name: 'arrow-forward'\n                                                                    }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= athlete.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= athlete.LastName %> </span> </div> </a> <% } else { %> <div class=\"results-table__athlete-link\"> <div class=\"results-table__athlete-image-container\"> <%= render( {\n                                                                    cssClass: 'results-table__athlete-image',\n                                                                    id: athlete.ResultId,\n                                                                    size: 'TABLE',\n                                                                    objectFit: true\n                                                                }, 'common.athlete-headshot' ) %> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= athlete.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= athlete.LastName %> </span> </div> </div> <% } %> </td> <td class=\"results-table__sub-cell u-hide-phablet\"><%= athlete.AthleteResultAge %></td> <td class=\"results-table__sub-cell\"><%= athlete.Position %></td> </tr> <% } ); %> </tbody> </table> <% } %> <% if ( unit.Results[ 0 ].TeamAwayMembers ) { %> <table class=\"results-table__sub-table\"> <thead> <tr> <td class=\"results-table__sub-table-caption\" colspan=\"4\"> <div class=\"results-table__country\"> <%= render( {\n                                                        cssClass: 'results-table__country-flag',\n                                                        countryCode: unit.Results[ 0 ].TeamAwayCode\n                                                    }, 'common.flag' ) %> <%= unit.Results[ 0 ].TeamAwayName %> </div> </td> </tr> <tr> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.capNumber.abbr' ) %></th> <th class=\"results-table__sub-header-cell u-text-left\"><%= PULSE.I18N.lookup( 'label.table.header.athletes' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small u-hide-phablet\"><%= PULSE.I18N.lookup( 'label.table.header.age' ) %></th> <th class=\"results-table__sub-header-cell results-table__sub-header-cell--small\"><%= PULSE.I18N.lookup( 'label.table.header.position' ) %></th> </tr> </thead> <tbody> <% _.each( unit.Results[ 0 ].TeamAwayMembers, function( athlete, index ) { %> <tr class=\"results-table__sub-row\"> <td class=\"results-table__sub-cell\"><%= athlete.CapNumber %></td> <td class=\"results-table__sub-cell u-text-left\"> <% if ( athlete.athleteLink ) { %> <a class=\"results-table__athlete-link\" href=\"<%= athlete.athleteLink %>\"> <div class=\"results-table__athlete-image-container\"> <%= render( {\n                                                                    cssClass: 'results-table__athlete-image',\n                                                                    id: athlete.ResultId,\n                                                                    size: 'TABLE',\n                                                                    objectFit: true\n                                                                }, 'common.athlete-headshot' ) %> <span class=\"results-table__athlete-more\"> <%= render( {\n                                                                        cssClass: 'results-table__athlete-arrow',\n                                                                        name: 'arrow-forward'\n                                                                    }, 'common.render-svg' ) %> </span> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= athlete.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= athlete.LastName %> </span> </div> </a> <% } else { %> <div class=\"results-table__athlete-link\"> <div class=\"results-table__athlete-image-container\"> <%= render( {\n                                                                    cssClass: 'results-table__athlete-image',\n                                                                    id: athlete.ResultId,\n                                                                    size: 'TABLE',\n                                                                    objectFit: true\n                                                                }, 'common.athlete-headshot' ) %> </div> <div class=\"results-table__athlete-name\"> <span class=\"results-table__athlete-first\"> <%= athlete.FirstName %> </span> <span class=\"results-table__athlete-last\"> <%= athlete.LastName %> </span> </div> </div> <% } %> </td> <td class=\"results-table__sub-cell u-hide-phablet\"><%= athlete.AthleteResultAge %></td> <td class=\"results-table__sub-cell\"><%= athlete.Position %></td> </tr> <% } ); %> </tbody> </table> <% } %> </div> </td> </tr> <% } %> <% } ); %> <tr> <td colspan=\"11\"> <div class=\"results-table__footer\"> <div class=\"results-table__legend\"> <%= render( {\n                            cssClass: 'results-table__legend-icon',\n                            name: 'info'\n                        }, 'common.render-svg' ) %> <% if ( !_.isEmpty( unitData.standings ) ) { %> <span class=\"results-table__legend-item u-show-tablet\"><strong><%= PULSE.I18N.lookup( 'label.table.header.rank.short' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.rank' ) %></span> <span class=\"results-table__legend-item u-show-tablet\"><strong><%= PULSE.I18N.lookup( 'label.table.header.matches.short' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.matches' ) %></span> <span class=\"results-table__legend-item u-show-tablet\"><strong><%= PULSE.I18N.lookup( 'label.table.header.won.short' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.won' ) %></span> <span class=\"results-table__legend-item u-show-tablet\"><strong><%= PULSE.I18N.lookup( 'label.table.header.lost.short' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.lost' ) %></span> <span class=\"results-table__legend-item u-show-tablet\"><strong><%= PULSE.I18N.lookup( 'label.table.header.tied.short' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.tied' ) %></span> <span class=\"results-table__legend-item\"><strong><%= PULSE.I18N.lookup( 'label.table.header.goalsFor.short' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.goalsFor' ) %></span> <span class=\"results-table__legend-item\"><strong><%= PULSE.I18N.lookup( 'label.table.header.goalsAgainst.short' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.goalsAgainst' ) %></span> <span class=\"results-table__legend-item\"><strong><%= PULSE.I18N.lookup( 'label.table.header.goalDifference.short' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.goalDifference' ) %></span> <span class=\"results-table__legend-item u-show-tablet\"><strong><%= PULSE.I18N.lookup( 'label.table.header.points.short' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.points' ) %></span> <% } %> <span class=\"results-table__legend-item u-show-tablet\"><strong><%= PULSE.I18N.lookup( 'label.table.header.capNumber.abbr' ) %>: </strong><%= PULSE.I18N.lookup( 'label.table.header.capNumber' ) %></span> <span class=\"results-table__legend-item\"><strong><%= PULSE.I18N.lookup( 'match.extraTime.short' ) %>: </strong><%= PULSE.I18N.lookup( 'match.extraTime' ) %></span> <span class=\"results-table__legend-item\"><strong><%= PULSE.I18N.lookup( 'match.penaltyShootOut.short' ) %>: </strong><%= PULSE.I18N.lookup( 'match.penaltyShootOut' ) %></span> <span class=\"results-table__legend-item\"><strong>*<%= PULSE.I18N.lookup( 'match.localDate.short' ) %>: </strong><%= PULSE.I18N.lookup( 'match.localDate' ) %></span> <span class=\"results-table__legend-item\"><strong>*<%= PULSE.I18N.lookup( 'match.localTime.short' ) %>: </strong><%= PULSE.I18N.lookup( 'match.localTime' ) %></span> </div> <div class=\"results-table__sponsor js-results-table-sponsor\"></div> </div> </td> </tr> </tbody> </table>");
"use strict";

/* eslint-disable max-lines */
/* eslint-disable max-lines */
(function (app, common, core, CONSTANTS, i18n) {
  'use strict';

  const WATER_POLO_STANDINGS_PHASE_TYPE = 2; // eslint-disable-line id-length

  const TEMPLATES = {
    EVENTS: 'results-table.events',
    UNIT_SELECTORS: {
      DEFAULT: 'results-table.unit-selector',
      WP: 'results-table.unit-selector-wp' // eslint-disable-line id-length
    },
    LOADER: 'common.loader-single',
    // these codes match the SportCode in the data, so no need to re-map them
    /* eslint-disable id-length */
    TABLES: {
      SW: 'results-table.table-sw',
      SW_RELAY: 'results-table.table-sw-relay',
      SY: 'results-table.table-sy',
      DV: 'results-table.table-dv',
      OW: 'results-table.table-ow',
      HD: 'results-table.table-hd',
      WP: 'results-table.table-wp'
    },
    /* eslint-enable */
    TIMING_PARTNER: 'results-table.timing-partner',
    BRACKETS_TEMPLATE: 'results-table.table-brackets'
  };
  const SELECTORS = {
    LOADER: '.js-loader',
    EMPTY_STATE: '.js-empty-state',
    EVENTS_CONTAINER: '.js-results-events-container',
    EVENT: '.js-results-event',
    UNIT_SELECTOR_CONTAINER: '.js-results-unit-selector-container',
    UNIT: '.js-results-unit',
    TABLE_CONTAINER: '.js-results-table-container',
    TABLE: '.js-results-table',
    TABLE_ROW: '.js-results-table-row',
    TABLE_ROW_EXPAND: '.js-results-row-expand',
    TABLE_SPONSOR: '.js-results-table-sponsor',
    TABLE_REFRESH_BUTTON: '.js-results-refresh-button',
    TABLE_REFRESH_BUTTON_TEXT: '.js-results-refresh-text',
    REFRESH_RESULTS_BUTTON: '.js-results-refresh-button',
    TABLE_BRACKETS_TABS: '.js-results-tabs',
    TABLE_BRACKETS_TABS_BTN: '.js-results-tabs-btn',
    TABLE_BRACKETS_CONTAINER: '.js-results-bracket-container',
    TABLE_BRACKETS_TAB_CONTENT: '.js-tabbed-element'
  };
  const TABLE_EXPAND_DELAY = 200; // .2s
  const SCROLL_DELAY = 400; // .4s
  const REFRESH_RESULTS_DELAY = 30000; // 30s

  const PARTNER_IMAGE_CONFIG = [{
    name: 'default',
    size: {
      width: 160,
      height: 90
    },
    multipliers: [1, 2],
    cssClass: ''
  }];

  /**
   * Results Table Widget
   * @param { HTMLElement } container - container Element that widget is instantiated on
   */
  app.ResultsTableWidget = class ResultsTableWidget {
    constructor(container) {
      this.container = container;
      this.competitionName = this.container.getAttribute('data-comp-name');
      this.competitionId = this.container.getAttribute('data-comp-id');
      this.isOlyimpicGames = this.competitionName.includes('Olympic Games') ? true : false;
      this.disciplineCount = this.container.getAttribute('data-disc-count');
      this.sponsorTags = this.container.getAttribute('data-sponsor-tags');
      this.eventsContainer = this.container.querySelector(SELECTORS.EVENTS_CONTAINER);
      this.loader = this.container.querySelector(SELECTORS.LOADER);
      this.emptyState = this.container.querySelector(SELECTORS.EMPTY_STATE);
      this.refreshResultsBtn = this.container.querySelector(SELECTORS.REFRESH_RESULTS_BUTTON);
      if (this.refreshResultsBtn) {
        common.addAriaClickListener(this.refreshResultsBtn, this.handleRefreshButtonClick.bind(this));
      }

      // If the page has filters, setup a watch, otherwise just request the events
      if (document.querySelector('[data-widget="filters"]')) {
        common.dependency.loaded('redux').then(this.setupWatches.bind(this));
      } else {
        this.fetchEvents();
      }
    }

    /**
     * Setup Watches
     *
     * Fires once redux has loaded, watches the filters for updates and
     * triggers a fetch of the results or filters what's already
     * loaded if doing client side phase filtering
     */
    setupWatches() {
      const {
        watch,
        slices
      } = PULSE.app.redux;
      watch(slices.filters.paths.values.all, filtersParams => {
        if (!_.isEmpty(filtersParams)) {
          this.eventsContainer.innerHTML = '';
          if (core.style.hasClass(this.loader, CONSTANTS.CLASSES.U_HIDE)) {
            core.style.removeClass(this.loader, CONSTANTS.CLASSES.U_HIDE);
          }
          this.filterParams = filtersParams.disciplines;
          this.fetchEvents();
        }
      }, true);
    }

    /**
     * Fetch Events
     *
     * Trigger an api request to the events endpoint, with optional params
     */
    fetchEvents() {
      const url = common.endpoints.fina.competitions.events(this.competitionId);
      core.data.request(url, 'GET', this.renderCompetition.bind(this));
    }

    /**
     * Render Competition
     * Using data from the competition events endpoint
     * render a list of individual events separated by disicpline
     *
     * @param {Object} eventsData - data response from competition events endpoint
     */
    renderCompetition(eventsData) {
      core.style.addClass(this.loader, CONSTANTS.CLASSES.U_HIDE);
      if (!eventsData || !eventsData.Sports || eventsData.Sports.length < 1) {
        core.style.removeClass(this.emptyState, CONSTANTS.CLASSES.U_HIDE);
        return;
      }

      // Make sure all the received disciplines actually have events inside them
      const disciplinesWithEvents = eventsData.Sports.filter(discipline => discipline.DisciplineList.length);
      if (!disciplinesWithEvents.length) {
        core.style.removeClass(this.emptyState, CONSTANTS.CLASSES.U_HIDE);
        return;
      }
      if (eventsData.TimeZone) {
        // the timezone set on an event will either have a '-' or nothing, so ensure the '+' is added to timezones ahead of UTC
        const timeZoneString = eventsData.TimeZone.charAt(0) !== '-' ? `+${eventsData.TimeZone}` : eventsData.TimeZone;
        // trim the seconds from the end of timezone to build a correct ISO timezone
        const dateString = timeZoneString.slice(0, -3); // eslint-disable-line no-magic-numbers
        this.container.setAttribute('data-event-timezone', dateString); // set the timezone on the container so we can use it later
      }
      let dataByDiscipline = CONSTANTS.DISCIPLINE_ORDER.reduce((sortedDiscipline, discipline) => {
        const dataDiscipline = disciplinesWithEvents.find(disciplineCode => disciplineCode.Code === discipline);
        if (dataDiscipline) {
          sortedDiscipline.push(dataDiscipline);
        }
        return sortedDiscipline;
      }, []);
      if (this.filterParams) {
        dataByDiscipline = eventsData.Sports.filter(discipline => discipline.Code === this.filterParams);
      }
      dataByDiscipline.forEach(discipline => {
        discipline.DisciplineList.forEach(disciplineEvent => {
          // search for a live unit within a discipline's event
          disciplineEvent.isLive = !_.isEmpty(disciplineEvent.HeatList.find(disciplineUnit => disciplineUnit.ResultStatus === 'LIVE'));
        });
        discipline.iconDisciplineName = common.fina.getDiscipline(discipline.Code).name; // Add the discipline icon name to each discipline object

        // This is a case where we need to differentiate between splits and sprints for the open water (OW) competitions.
        // The client hasn't put the identifier on the OW sport itself but rather the whole events object
        // When we're building the model we'll need to check if we want to display sprints hence the class property
        if (discipline.iconDisciplineName === CONSTANTS.DISCIPLINES.OPEN_WATER.name && 'HasOWSprints' in eventsData) {
          this.hasOWSprints = eventsData.HasOWSprints;
        }
      });
      this.eventsContainer.innerHTML = app.templating.render({
        dataByDiscipline: dataByDiscipline
      }, TEMPLATES.EVENTS);

      // This is used for the new brackets layout for the Diving WC results.
      this.bracketTabsNav = this.container.querySelectorAll(SELECTORS.TABLE_BRACKETS_TABS);
      const eventEles = common.template.nodeListToArray(this.eventsContainer.querySelectorAll(SELECTORS.EVENT));
      eventEles.forEach(eventEle => {
        common.addAriaClickListener(eventEle, event => {
          if (event.currentTarget.getAttribute('data-expanded') === 'true') {
            this.closeEvent(event.currentTarget);
          } else {
            this.closeAllEvents();
            this.openEvent(event.currentTarget);
            this.getEventData(event);
          }
        });
      });
      const eventFromUrl = core.url.getParameterByName('event');
      if (eventFromUrl) {
        const matchingEventEle = eventEles.find(eventEle => eventEle.getAttribute('data-event-guid') === eventFromUrl);
        if (matchingEventEle) {
          // move to event set in URL
          this.openEvent(matchingEventEle);
          this.getEventData(null, matchingEventEle);
        }
      }
    }

    /**
     * Get Event Data
     * An individual event has been clicked
     * Get a more detailed data object for this specific event by using its ID
     * to make a request to the events endpoint
     *
     * @param {Event} clickEvent - the click event object
     * @param {HTMLElement} selectedEventOverride - passed directly to act as an override
     * @param {String} unitRefreshId - the ID of the selected event unit from refreshing unit results
     */
    getEventData(clickEvent, selectedEventOverride, unitRefreshId) {
      let eventEle = selectedEventOverride || clickEvent.currentTarget;
      if (selectedEventOverride) {
        // as there's a unit on the URL or an override has been passed, use that as the selected event
        this.openEvent(eventEle); // force event to be open
      }
      const eventGUID = eventEle.getAttribute('data-event-guid');
      const eventRequestUrl = common.endpoints.fina.event(eventGUID);
      core.data.request(eventRequestUrl, 'GET', this.modelEvent.bind(this, eventEle, unitRefreshId));
    }

    /**
     * Model Event
     * Adds additional properties to data retreived from event endpoint
     * Categorised by Discipline
     *
     * @param {HTMLElement} selectedEvent - the selected event's HTML <button> element
     * @param {String} unitRefreshId - the ID of the selected event unit from refreshing unit results
     * @param {Object} eventData - event data returned from event endpoint
     */
    modelEvent(selectedEvent, unitRefreshId, eventData) {
      if (!eventData || !eventData.Heats || eventData.Heats.length < 1) {
        core.style.removeClass(this.emptyState, CONSTANTS.CLASSES.U_HIDE);
        return;
      }
      let modelledEvent = {};
      if (eventData.SportCode === 'WP') {
        // Water Polo events are treated differently to other disciplines
        modelledEvent = this.modelWaterPoloEvent(eventData);
      } else {
        modelledEvent = {
          units: eventData.Heats.map(unit => {
            // eslint-disable-line complexity
            let modelledUnit = {
              ...unit,
              template: TEMPLATES.TABLES[eventData.SportCode],
              isLive: unit.ResultStatus && (unit.ResultStatus === 'LIVE' || unit.ResultStatus === 'UNOFFICIAL') ? true : false,
              PhaseId: unit.IsSummary ? this.createSummaryId(unit) : this.createPhaseId(unit),
              // if the event has a timing and score partner assigned save its name to each unit
              timingPartner: eventData.TimingAndScoringPartnerName ? `sponsor-${eventData.TimingAndScoringPartnerName.toLowerCase().replace(' ', '-')}` : null
            };
            const timezoneString = this.container.getAttribute('data-event-timezone');
            const dateString = `${unit.Date}T${unit.Time}${timezoneString}`;
            // We should be using the UtcDateTime parameter but adding a fallback to the date and time parameters if it doesn't exist
            let formattedDate = unit.UtcDateTime ? dayjs.utc(unit.UtcDateTime).local() : dayjs(dateString);
            modelledUnit.formattedDate = formattedDate.format('ddd MMM DD YYYY, HH:mm');
            if (unit.Results && unit.Results.length) {
              switch (eventData.SportCode) {
                case 'SW':
                  {
                    // swimming
                    const isRelay = unit.Results[0].SubResults && unit.Results[0].SubResults.length ? true : false; // if there are "competitors" this is a duo/synchronised event
                    modelledUnit.IsRelayEvent = isRelay;
                    modelledUnit.Results = this.modelSwimmingResults(unit.Results, isRelay);
                    if (isRelay) {
                      modelledUnit.template = TEMPLATES.TABLES.SW_RELAY;
                    }
                    break;
                  }
                case 'DV':
                  {
                    // diving
                    const is3m10mTeam = unit.DisciplineCode === '400';
                    const isSynchronised = unit.Results[0].Competitors && unit.Results[0].Competitors.length ? true : false; // if there are "competitors" this is a duo/synchronised event
                    const isBracketFormat = unit.BracketFormat || false;
                    modelledUnit.IsSynchronisedEvent = isSynchronised;
                    modelledUnit.Is3m10mTeam = is3m10mTeam;
                    modelledUnit.Results = this.modelDivingResults(unit.Results, isSynchronised, isBracketFormat);
                    break;
                  }
                case 'HD':
                  // high diving
                  modelledUnit.Results = this.modelHighDivingResults(unit.Results);
                  break;
                case 'OW':
                  {
                    // open water
                    const isMixed = unit.Results[0].SubResults && unit.Results[0].SubResults.length ? true : false; // if there are sub results this is a mixed team event
                    modelledUnit.IsMixedEvent = isMixed;
                    modelledUnit.Results = this.modelOpenWaterResults(unit.Results, isMixed);
                    break;
                  }
                case 'SY':
                  {
                    // artistic swimming
                    const isTeam = !_.isEmpty(unit.Results[0].Team); // if the Team object exists and isn't empty then this is a team event
                    const isDuet = unit.Results[0].Competitors && unit.Results[0].Competitors.length;
                    modelledUnit.IsTeamEvent = isTeam;
                    modelledUnit.isDuet = isDuet;
                    modelledUnit.Results = this.modelArtSwimResults(unit.Results, isTeam, isDuet);
                    break;
                  }
                case 'WP':
                  modelledUnit = this.modelWaterPoloEvent(unit);
                  break;
                default:
                  console.error(`Event with PhaseId ${eventData.PhaseId} has an unrecognisable SportCode: ${eventData.SportCode}.`);
                  break;
              }
            }
            return modelledUnit;
          })
        };
      }

      // if the data has BracketFormat and the sport code of DV use the model diving function
      if (eventData.SportCode === 'DV' && (eventData.Heats[0].BracketFormat === true || eventData.Heats[1] && eventData.Heats[1].BracketFormat === true)) {
        this.modelDivingBracket(eventData, selectedEvent);
      }
      this.renderEventUnits(selectedEvent, modelledEvent, unitRefreshId, eventData.SportCode === 'WP' ? true : false);
    }

    /**
     * Model Swimming Results
     * Knowing this unit is part of a swimming event, model it to include additional information
     * Solo and Relay swimming results are structured differently, the event is a relay if "SubResults" are present in the unit data
     *
     * @param {Array<Object>} unitResults - result objects for this Swimming unit
     * @param {Boolean} isRelay - true if the swimming event is a relay
     * @returns {Array<Object>} the same results as passed to the this function, with additional useful properties
     */
    modelSwimmingResults(unitResults, isRelay) {
      return unitResults.map(unitResult => {
        if (isRelay && unitResult.SubResults && unitResult.SubResults.length) {
          unitResult.SubResults.forEach(subResult => {
            const recordType = unitResult.RecordType ? unitResult.RecordType : subResult.RecordType ? subResult.RecordType : null;
            subResult.RecordType = subResult.RecordType ? recordType.split(',').map(record => record.trim()) : null;
            subResult.athleteLink = common.url.generateAthleteUrl(subResult.ResultId, `${subResult.FirstName} ${subResult.LastName}`, subResult.NAT);
          });
        } else {
          unitResult.athleteLink = common.url.generateAthleteUrl(unitResult.ResultId, `${unitResult.FirstName} ${unitResult.LastName}`, unitResult.NAT);
        }
        return {
          ...unitResult,
          RecordType: unitResult.RecordType ? unitResult.RecordType.split(',').map(record => record.trim()) : null // can be one or two records, if the latter this is split by a comma and space
        };
      });
    }

    // This function builds and displays the diving bracket layout.
    modelDivingBracket(data, selectedEventEle) {
      const containerElement = selectedEventEle.parentElement;
      const tabsContainer = containerElement.querySelector(SELECTORS.TABLE_BRACKETS_TABS);
      const tabsBTNS = containerElement.querySelectorAll(SELECTORS.TABLE_BRACKETS_TABS_BTN);
      const bracketContainer = containerElement.querySelector(SELECTORS.TABLE_BRACKETS_CONTAINER);
      const tabbedElements = containerElement.querySelectorAll(SELECTORS.TABLE_BRACKETS_TAB_CONTENT);
      const listViewElement = containerElement.querySelector(SELECTORS.TABLE_CONTAINER);
      listViewElement.classList.add('results-table__table-container--use-qualified');
      bracketContainer.classList.add('results-table__bracket-container--use-qualified');
      tabsContainer.classList.remove('u-hide');
      [...tabsBTNS].forEach(btn => {
        btn.addEventListener('click', event => {
          event.preventDefault();
          [...tabsBTNS].forEach(btnEl => {
            btnEl.classList.remove('is-active');
          });
          btn.classList.add('is-active');
          const activeTab = btn.dataset.tab;
          [...tabbedElements].forEach(element => {
            element.classList.add('u-hide');
          });
          containerElement.querySelector(`#${activeTab}`).classList.remove('u-hide');
        });
      });
      const sortedHeatsData = data.Heats.sort((a, b) => new Date(a.UtcDateTime) - new Date(b.UtcDateTime));
      let bracketsDataSorted = {};
      sortedHeatsData.forEach(heat => {
        bracketsDataSorted[heat.Name] = {
          ...heat,
          sortedResults: this.bracketsDataSorter(heat.Results)
        };
      });
      bracketContainer.innerHTML = app.templating.render({
        unitData: bracketsDataSorted
      }, TEMPLATES.BRACKETS_TEMPLATE);
    }

    // This sorts the brackets data into a usable format.
    bracketsDataSorter(heat) {
      let data = {};
      heat.forEach(result => {
        if (typeof data[result.BracketGroup] === 'undefined') {
          data[result.BracketGroup] = {};
        }
        if (typeof data[result.BracketGroup][result.BracketResultGroup] === 'undefined') {
          data[result.BracketGroup][result.BracketResultGroup] = [];
        }
        data[result.BracketGroup][result.BracketResultGroup].push(result);
      });
      return data;
    }

    /**
     * Model Diving Results
     * Knowing this unit is part of a diving event, model it to include additional information
     *
     * @param {Array<Object>} unitResults - result objects for this Diving unit
     * @param {Boolean} isSynchronised - true if the diving event is synchronised, i.e. more than one competitor
     * @returns {Array<Object>} the same results as passed to the this function, with additional useful properties
     */
    modelDivingResults(unitResults, isSynchronised, isBracketFormat) {
      // use this if there are bracket values in the returned data.
      const bracketFormatGroups = unitResults.reduce((acc, item) => {
        const key = item.BracketResultGroup;
        item.athleteLink = common.url.generateAthleteUrl(item.ResultId, `${item.FirstName} ${item.LastName}`, item.NAT);
        if (!acc[key]) {
          acc[key] = [];
        }
        acc[key].push(item);
        return acc;
      }, {});
      let divingResults = isBracketFormat ? bracketFormatGroups : unitResults;
      if (!isBracketFormat) {
        return divingResults.map(unitResult => {
          if (isSynchronised && unitResult.Competitors && unitResult.Competitors.length) {
            unitResult.Competitors.forEach(competitor => {
              competitor.athleteLink = common.url.generateAthleteUrl(competitor.ResultId, `${competitor.FirstName} ${competitor.LastName}`, competitor.NAT);
            });
          } else {
            // make a Competitors array anyway, using the data of the solo athlete to populate it
            unitResult.Competitors = [{
              FirstName: unitResult.FirstName,
              LastName: unitResult.LastName,
              MedalTag: unitResult.MedalTag,
              AthleteResultAge: unitResult.AthleteResultAge,
              NAT: unitResult.NAT,
              NATName: unitResult.NATName,
              athleteLink: common.url.generateAthleteUrl(unitResult.ResultId, `${unitResult.FirstName} ${unitResult.LastName}`, unitResult.NAT),
              ResultId: unitResult.ResultId
            }];
          }
          return {
            ...unitResult,
            RecordType: unitResult.RecordType ? unitResult.RecordType.split(',').map(record => record.trim()) : null // can be one or two records, if the latter this is split by a comma and space
          };
        });
      } else if (isBracketFormat) {
        return divingResults;
      }
    }

    /**
     * Model High Diving Results
     * Knowing this unit is part of a high diving event, model it to include additional information
     *
     * @param {Array<Object>} unitResults - result objects for this High Diving unit
     * @returns {Array<Object>} the same results as passed to the this function, with additional useful properties
     */
    modelHighDivingResults(unitResults) {
      return unitResults.map(unitResult => {
        return {
          ...unitResult,
          athleteLink: common.url.generateAthleteUrl(unitResult.ResultId, `${unitResult.FirstName} ${unitResult.LastName}`, unitResult.NAT),
          RecordType: unitResult.RecordType ? unitResult.RecordType.split(',').map(record => record.trim()) : null // can be one or two records, if the latter this is split by a comma and space
        };
      });
    }

    /**
     * Model Open Water Results
     * Knowing this unit is part of a open water event, model it to include additional information
     *
     * @param {Array<Object>} unitResults - result objects for this open water unit
     * @param {Boolean} isMixed - true if the open water event is mixed, i.e. a team event with mixed gender teams
     * @returns {Array<Object>} the same results as passed to the this function, with additional useful properties
     */
    modelOpenWaterResults(unitResults, isMixed) {
      return unitResults.map(unitResult => {
        if (isMixed && unitResult.SubResults && unitResult.SubResults.length) {
          unitResult.SubResults.forEach(subResult => {
            subResult.athleteLink = common.url.generateAthleteUrl(subResult.ResultId, `${subResult.FirstName} ${subResult.LastName}`, subResult.NAT);
          });
        } else {
          unitResult.athleteLink = common.url.generateAthleteUrl(unitResult.ResultId, `${unitResult.FirstName} ${unitResult.LastName}`, unitResult.NAT);
          if (unitResult.Sprint1Rank && this.hasOWSprints) {
            unitResult.showSprintRanks = this.hasOWSprints;
            unitResult.sprintRanks = [];
            if (unitResult.Sprint1Rank && unitResult.Sprint1Time) {
              unitResult.sprintRanks.push({
                Rank: unitResult.Sprint1Rank,
                Time: unitResult.Sprint1Time
              });
            }
            if (unitResult.Sprint2Rank && unitResult.Sprint2Time) {
              unitResult.sprintRanks.push({
                Rank: unitResult.Sprint2Rank,
                Time: unitResult.Sprint2Time
              });
            }
            if (unitResult.Sprint3Rank && unitResult.Sprint3Time) {
              unitResult.sprintRanks.push({
                Rank: unitResult.Sprint3Rank,
                Time: unitResult.Sprint3Time
              });
            }
          }
        }
        return {
          ...unitResult,
          RecordType: unitResult.RecordType ? unitResult.RecordType.split(',').map(record => record.trim()) : null // can be one or two records, if the latter this is split by a comma and space
        };
      });
    }

    /**
     * Model Artistic Swimming Results
     * Knowing this unit is part of an artistic swimming event, model it to include additional information
     *
     * @param {Array<Object>} unitResults - result objects for this Diving unit
     * @param {Boolean} isTeam - true if the art swim event is a team event
     * @param {Boolean} isDuet - true if the art swim event is a duet
     * @returns {Array<Object>} the same results as passed to the this function, with additional useful properties
     */
    modelArtSwimResults(unitResults, isTeam, isDuet) {
      return unitResults.map(unitResult => {
        if (isTeam && unitResult.Team.Competitors && unitResult.Team.Competitors.length) {
          unitResult.Team.Competitors.forEach(competitor => {
            competitor.athleteLink = common.url.generateAthleteUrl(competitor.ResultId, `${competitor.FirstName} ${competitor.LastName}`, competitor.NAT);
          });
        } else if (isDuet && unitResult.Competitors && unitResult.Competitors.length) {
          unitResult.Competitors.forEach(competitor => {
            competitor.athleteLink = common.url.generateAthleteUrl(competitor.ResultId, `${competitor.FirstName} ${competitor.LastName}`, competitor.NAT);
          });
        } else if (!isTeam || !isDuet) {
          // make a Competitors array anyway, using the data of the solo athlete to populate it
          unitResult.Competitors = [{
            FirstName: unitResult.FirstName,
            LastName: unitResult.LastName,
            MedalTag: unitResult.MedalTag,
            AthleteResultAge: unitResult.AthleteResultAge,
            NAT: unitResult.NAT,
            NATName: unitResult.NATName,
            Reserve: unitResult.Reserve,
            ReserveInfo: unitResult.ReserveInfo,
            athleteLink: common.url.generateAthleteUrl(unitResult.ResultId, `${unitResult.FirstName} ${unitResult.LastName}`, unitResult.NAT),
            ResultId: unitResult.ResultId
          }];
        }
        return {
          ...unitResult,
          RecordType: unitResult.RecordType ? unitResult.RecordType.split(',').map(record => record.trim()) : null // can be one or two records, if the latter this is split by a comma and space
        };
      });
    }

    /**
     * Model Water Polo Event
     * Organise Water Polo event data into phases
     * Phases can be threefold, Standings, Matches or Standings & Matches
     *
     * @param {Array<Object>} eventData - the Water Polo Event data
     * @returns {Array<Object>} A modelled Water Polo Event
     */
    modelWaterPoloEvent(eventData) {
      const timezoneString = this.container.getAttribute('data-event-timezone');
      let modelledEvent = {
        units: []
      };
      let currentPhase = {
        // scaffold of phase object
        phaseName: '',
        standings: {},
        units: [],
        isFinalStandings: false,
        isLive: false,
        isOfficial: false,
        template: TEMPLATES.TABLES.WP
      };
      eventData.Heats.forEach((unit, index) => {
        if (unit.PhaseName !== currentPhase.phaseName) {
          // new current phase

          if (currentPhase.phaseName !== '') {
            // not the first blank item

            /**
             * The Final Standings phase has no units as it is a summary of all previous phases
             */
            if (!currentPhase.matches.length) {
              currentPhase.isFinalStandings = true;
            }
            modelledEvent.units.push(currentPhase); // this phase is ready so push it to the modelled event
          }
          currentPhase = {
            // start a new "current" phase
            phaseName: unit.PhaseName,
            standings: {},
            matches: [],
            rounds: [],
            isFinalStandings: false,
            isLive: false,
            isOfficial: false,
            template: TEMPLATES.TABLES.WP
          };
          if (unit.PhaseType === WATER_POLO_STANDINGS_PHASE_TYPE) {
            currentPhase.standings = this.modelWaterPoloUnit(unit, timezoneString);
          } else {
            currentPhase.matches.push(this.modelWaterPoloUnit(unit, timezoneString));
          }
        } else {
          // add to current phase

          // Set status flags
          if (unit.ResultStatus) {
            if (unit.ResultStatus === 'OFFICIAL') {
              currentPhase.isOfficial = true;
            } else {
              currentPhase.isOfficial = false;
            }
            if (unit.ResultStatus === 'LIVE' || unit.ResultStatus === 'UNOFFICIAL') {
              currentPhase.isLive = true;
            }
          }
          currentPhase.matches.push(this.modelWaterPoloUnit(unit, timezoneString));
          if (index === eventData.Heats.length - 1) {
            // if this is the last unit push whatever is in this current phase
            modelledEvent.units.push(currentPhase); // this phase is ready so push it to the modelled event
          }
        }
      });

      // Add rounds to each unit
      modelledEvent.units.forEach(unit => {
        if (unit.matches.length) {
          unit.rounds = unit.matches.reduce((rounds, match) => {
            const roundNumber = match.Round || 0;
            const foundRound = rounds.find(round => round.number === roundNumber);
            const isLiveMatch = match.ResultStatus && (match.ResultStatus === 'LIVE' || match.ResultStatus === 'UNOFFICIAL');
            if (foundRound) {
              foundRound.matches.push(match);

              // Toggle isLive to true in the round if match is live
              if (isLiveMatch) {
                foundRound.isLive = true;
              }
            } else {
              rounds.push({
                number: roundNumber,
                title: roundNumber === 0 ? i18n.lookup('label.table.header.matches') : i18n.lookup('label.table.header.roundMatches', {
                  roundNumber
                }),
                matches: [match],
                isLive: isLiveMatch
              });
            }
            return rounds;
          }, []);
        }
      });
      return modelledEvent;
    }

    /**
     * Model Water Polo Unit
     * Knowing this unit is a Water Polo event, model it to include additional information
     *
     * @param {Object} unit - a water polo unit
     * @param {String} timezoneString - the User's timezone that's saved on the widget container
     * @returns {Object} a water polo unit with athlete links and formatted time and date
     */
    modelWaterPoloUnit(unit, timezoneString) {
      let modelledUnit = {
        ...unit
      };

      // if the UtcDateTime parameter exists use it if not fallback
      // UtcDateTime will exist for major comps
      if (unit.UtcDateTime) {
        modelledUnit.formattedDate = dayjs(unit.UtcDateTime).local().format('DD/MM/YYYY');
        modelledUnit.formattedTime = dayjs(unit.UtcDateTime).local().format('HH:mm');
      } else if (unit.Date && unit.Time) {
        const dateString = `${unit.Date}T${unit.Time}${timezoneString || ''}`;
        modelledUnit.formattedDate = dayjs(dateString).format('DD/MM/YYYY');
        modelledUnit.formattedTime = dayjs(dateString).format('HH:mm');
      }
      let medalString = null; // dumb checks to see if the unit has a medal name string in it, as this isn't provided in the data
      if (unit.Name.toLowerCase().includes(CONSTANTS.MEDALS.GOLD)) {
        medalString = CONSTANTS.MEDALS.GOLD;
      } else if (unit.Name.toLowerCase().includes(CONSTANTS.MEDALS.SILVER)) {
        medalString = CONSTANTS.MEDALS.SILVER;
      } else if (unit.Name.toLowerCase().includes(CONSTANTS.MEDALS.BRONZE)) {
        medalString = CONSTANTS.MEDALS.BRONZE;
      }
      modelledUnit.medalString = medalString;
      // eslint-disable-next-line max-lines

      // eslint-disable-next-line max-lines
      if (unit.Results && unit.Results.length) {
        modelledUnit.Results = unit.Results.map(result => {
          if (result.TeamMembers && result.TeamMembers.length) {
            result.TeamMembers.forEach(athlete => {
              athlete.athleteLink = common.url.generateAthleteUrl(athlete.ResultId, `${athlete.FirstName} ${athlete.LastName}`, athlete.NAT);
            });
          }
          if (result.TeamHomeMembers && result.TeamHomeMembers.length) {
            result.TeamHomeMembers.forEach(athlete => {
              athlete.athleteLink = common.url.generateAthleteUrl(athlete.ResultId, `${athlete.FirstName} ${athlete.LastName}`, athlete.NAT);
            });
          }
          if (result.TeamAwayMembers && result.TeamAwayMembers.length) {
            result.TeamAwayMembers.forEach(athlete => {
              athlete.athleteLink = common.url.generateAthleteUrl(athlete.ResultId, `${athlete.FirstName} ${athlete.LastName}`, athlete.NAT);
            });
          }
          return result;
        });
      }

      // If a result has a round, add it to the top level object
      if (modelledUnit.Results.length && modelledUnit.Results[0].Round) {
        modelledUnit.Round = modelledUnit.Results[0].Round;
      }
      return modelledUnit;
    }

    /**
     * Render Event Units
     * Render the event's units as a slider selector
     * Default the active unit to the first in the list
     *
     * @param {HTMLElement} selectedEventEle - the selected event's HTML <button> element
     * @param {Object} modelledEventData - event data returned from event endpoint with additional props for the FE
     * @param {String} unitRefreshId - the ID of the selected event unit from refreshing unit results
     * @param {Boolean} isWaterPolo - set to true if this is a water polo event
     */
    renderEventUnits(selectedEventEle, modelledEventData, unitRefreshId, isWaterPolo) {
      const unitFromUrl = core.url.getParameterByName('unit');
      const unitSelectorContainer = selectedEventEle.parentElement.querySelector(SELECTORS.UNIT_SELECTOR_CONTAINER);
      unitSelectorContainer.innerHTML = app.templating.render({
        cssClass: 'results-table__unit-selector',
        units: modelledEventData.units
      }, isWaterPolo ? TEMPLATES.UNIT_SELECTORS.WP : TEMPLATES.UNIT_SELECTORS.DEFAULT);
      const unitSelector = this.container.querySelector('[data-widget="unit-selector"]');
      if (unitSelector) {
        new app.UnitSelector(unitSelector); // initialise the Unit Selector

        const unitEles = common.template.nodeListToArray(unitSelector.querySelectorAll(SELECTORS.UNIT));
        if (unitEles.length) {
          let defaultUnitIndex = 0;
          unitEles.forEach((unitEle, index) => {
            let matchingUnitData = {};
            const unitName = unitEle.getAttribute('data-unit-name');
            if (isWaterPolo) {
              matchingUnitData = modelledEventData.units.find(unitData => unitData.phaseName === unitName);
            } else {
              matchingUnitData = modelledEventData.units.find(unitData => unitData.Name === unitName);
            }
            if (!_.isEmpty(matchingUnitData)) {
              if (unitRefreshId === unitName) {
                // if this unit ID matches that which has been selected to refresh this unit should be displayed
                defaultUnitIndex = index;
              } else if (!unitRefreshId && unitFromUrl === common.url.urlify(unitName)) {
                // if this unit ID matches that stored in the URL this unit should be displayed
                defaultUnitIndex = index;
              } // else will default to the first item

              common.addAriaClickListener(unitEle, event => {
                unitEles.forEach(unit => unit.classList.remove(CONSTANTS.CLASSES.IS_ACTIVE)); // remove active classes from all units, then add to the selected unit
                event.currentTarget.classList.add(CONSTANTS.CLASSES.IS_ACTIVE);
                this.updateUrl('unit', unitName); // Update the URL to include the unit selected
                this.renderResultsTable(matchingUnitData, selectedEventEle, unitName); // render the table
              });
            } else {
              console.error(`Results table: Could not find matching data for ${unitName}`);
            }
          });

          // display the default unit
          const defaultUnitData = modelledEventData.units[defaultUnitIndex];
          if (!_.isEmpty(defaultUnitData)) {
            const unitEle = unitEles[defaultUnitIndex];
            const unitName = unitEles[defaultUnitIndex].getAttribute('data-unit-name');
            this.renderResultsTable(defaultUnitData, selectedEventEle, unitName);
            unitEle.classList.add(CONSTANTS.CLASSES.IS_ACTIVE);

            // Bug with ScrollIntoView in IE so skip it if IE
            if (!_isIE()) {
              setTimeout(() => {
                unitEle.parentElement.scrollIntoView({
                  behavior: 'smooth',
                  block: 'center'
                });
              }, SCROLL_DELAY);
            }
          }
          unitSelector.classList.add(CONSTANTS.CLASSES.IS_ACTIVE);
        } else {
          core.style.removeClass(this.emptyState, CONSTANTS.CLASSES.U_HIDE);
          console.error('Results Table: Could not find rendered unit selector elements.');
        }
      }
    }

    /**
     * Show Results Table
     * Reveal the relevant data for the selected event unit as a table
     *
     * @param {Object} unitData - data for this event unit as returned from the event endpoint
     * @param {HTMLElement} selectedEventEle - the selected event's HTML <button> element
     * @param {String} selectedUnit - the name of the selected unit, either from refreshing unit results or directly from the page URL
     */
    renderResultsTable(unitData, selectedEventEle, selectedUnit) {
      const resultsTableContainer = selectedEventEle.parentElement.querySelector(SELECTORS.TABLE_CONTAINER);
      this.resetTabbedContent(selectedEventEle);
      this.scrollBracketsMobile(selectedEventEle);
      resultsTableContainer.innerHTML = app.templating.render({
        unitData: unitData,
        compID: this.competitionId,
        isOlyimpicGames: this.isOlyimpicGames
      }, unitData.template);
      const renderedTable = resultsTableContainer.firstElementChild;
      this.addTableListeners(resultsTableContainer, renderedTable);
      if (renderedTable && this.sponsorTags && unitData.timingPartner) {
        this.getTimingPartner(resultsTableContainer, renderedTable, unitData.timingPartner);
      } else if (renderedTable) {
        this.openTable(resultsTableContainer, renderedTable);
      } else {
        console.error('Did not render table for unit.');
      }
      if (unitData.isLive) {
        this.showRefreshResultsButton(selectedEventEle.parentElement, selectedEventEle, selectedUnit);
      } else {
        this.hideRefreshResultsButton();
      }
    }

    /**
     * Add Result Listeners
     * Adds click functionality to the expandable table rows to allow them to expand
     *
     * @param {HTMLElement} tableContainer - the rendered unit's table container
     * @param {HTMLElement} renderedTable - the results table that's just been rendered
     */
    addTableListeners(tableContainer, renderedTable) {
      const rowExpandBtns = common.template.nodeListToArray(tableContainer.querySelectorAll(SELECTORS.TABLE_ROW_EXPAND));
      if (rowExpandBtns.length > 0) {
        rowExpandBtns.forEach(rowExpandBtn => {
          common.addAriaClickListener(rowExpandBtn, this.toggleRow.bind(this, tableContainer, renderedTable));
        });
      }
    }

    /**
     * Get Timing Partner
     * Using the timing partner string and any tags saved on the widget config,
     * request a promo from the content API that shares both those tags
     *
     * @param {HTMLElement} tableContainer - the rendered unit's table container
     * @param {HTMLElement} renderedTable - the rendered table of event results
     * @param {String} timingPartnerName - the timing partner name returned on each event
     */
    getTimingPartner(tableContainer, renderedTable, timingPartnerName) {
      const partnerFromStorage = sessionStorage.getItem(`partner-promo_${timingPartnerName}`);
      if (partnerFromStorage) {
        this.renderTimingPartner(tableContainer, renderedTable, timingPartnerName, JSON.parse(partnerFromStorage));
      } else {
        const params = {
          pageSize: 1,
          tagNames: `${this.sponsorTags},${timingPartnerName}` // sponsor tags set on the widget as a data-attribute and the name of the partner from the data
        };
        const url = common.url.createContentPath('PROMO', params);
        core.data.request(url, 'GET', this.renderTimingPartner.bind(this, tableContainer, renderedTable, timingPartnerName));
      }
    }

    /**
     * Render Timing Partner
     * Using the content API reponse, or the saved version of this in session storage,
     * render the timing partner beneath the open table
     *
     * @param {HTMLElement} tableContainer - the rendered unit's table container
     * @param {HTMLElement} renderedTable - the rendered table of event results
     * @param {String} timingPartnerName - the timing partner name returned on each event
     * @param {Object<Array>} partnerData - content API response for a timing partner promo
     */
    renderTimingPartner(tableContainer, renderedTable, timingPartnerName, partnerData) {
      let partnerPromo = null;
      if (partnerData.fromStorage) {
        // as this has previously been stored no processing is required
        partnerPromo = partnerData;
      } else if (!partnerData || !partnerData.content || !partnerData.content.length) {
        return;
      } else {
        const attachMediaQueryConfig = common.content.getContentModel(partnerData.content[0], PARTNER_IMAGE_CONFIG);
        partnerPromo = {
          title: attachMediaQueryConfig.title,
          links: attachMediaQueryConfig.links,
          mediaQueryConfig: attachMediaQueryConfig.mediaQueryConfig
        };
      }
      if (partnerPromo) {
        this.storePartner(partnerPromo, timingPartnerName);
        const partnerContainer = tableContainer.querySelector(SELECTORS.TABLE_SPONSOR);
        if (partnerContainer) {
          partnerContainer.innerHTML = app.templating.render({
            data: partnerPromo
          }, TEMPLATES.TIMING_PARTNER);
          new app.LazyLoad(partnerContainer);
        }
      }
      this.openTable(tableContainer, renderedTable);
    }

    /**
     * Store Partner
     * To avoid making repeat requests to the content API for the partner image,
     * store it in session storage
     * @param {Object} partnerPromo - A trimmed-down version of the content API promo response, with media query config applied for the promo image
     * @param {String} name - the partner name to key the session storage with
     */
    storePartner(partnerPromo, name) {
      partnerPromo.fromStorage = true; // add an identifier here so it can be checked when re-rendering
      const toStore = JSON.stringify(partnerPromo);
      sessionStorage.setItem(`partner-promo_${name}`, toStore);
    }

    /**
     * Open Table
     * Used to reveal an event's results table
     * @param {HTMLElement} tableContainer - the rendered unit's table container
     * @param {HTMLElement} renderedTable - the rendered table of event results
     */
    openTable(tableContainer, renderedTable) {
      const tables = tableContainer.querySelectorAll('.results-table__table');
      if (tables.length > 1) {
        const tablesContainerDiv = tableContainer.querySelector('.results-table__parent-container');
        [...tables].forEach(table => {
          const renderedTableHeight = tablesContainerDiv ? tablesContainerDiv.offsetHeight * tables.length : renderedTable.offsetHeight;
          setTimeout(() => {
            table.classList.add(CONSTANTS.CLASSES.IS_ACTIVE);
            tableContainer.style.height = `${renderedTableHeight + 2}px`;
            app.widgetInitialiser.addMultipleWidgetsByName('athlete-headshot'); // kick off and load the athlete headshots
          }, TABLE_EXPAND_DELAY);
        });
      } else {
        const renderedTableHeight = renderedTable.offsetHeight;
        setTimeout(() => {
          renderedTable.classList.add(CONSTANTS.CLASSES.IS_ACTIVE);
          tableContainer.style.height = `${renderedTableHeight + 2}px`;
          app.widgetInitialiser.addMultipleWidgetsByName('athlete-headshot'); // kick off and load the athlete headshots
        }, TABLE_EXPAND_DELAY);
      }
    }

    /**
     * Toggle Row
     * Adds a class to the row that is used to expand the row
     * Sets the table container's height to matcg the rendered table's height so it can be transitioned
     *
     * @param {HTMLElement} tableContainer - the rendered unit's table container
     * @param {HTMLElement} renderedTable - the results table that's just been rendered
     * @param {Event} clickEvent - the click event used to toggle the row
     */
    toggleRow(tableContainer, renderedTable, clickEvent) {
      const tables = tableContainer.querySelectorAll('.results-table__table');
      if (tables.length > 1) {
        const tablesContainerDiv = tableContainer.querySelector('.results-table__parent-container');
        const expandBtn = clickEvent.currentTarget;
        core.style.toggleClass(expandBtn, CONSTANTS.CLASSES.IS_ACTIVE);
        const parentRow = common.dom.closest(expandBtn, SELECTORS.TABLE_ROW);
        core.style.toggleClass(parentRow, CONSTANTS.CLASSES.IS_ACTIVE);

        // new height now there's an extra expanded row
        const renderedTableHeight = tablesContainerDiv ? tablesContainerDiv.offsetHeight * tables.length : renderedTable.offsetHeight;
        tableContainer.style.height = `${renderedTableHeight + 2}px`;
      } else {
        const expandBtn = clickEvent.currentTarget;
        core.style.toggleClass(expandBtn, CONSTANTS.CLASSES.IS_ACTIVE);
        const parentRow = common.dom.closest(expandBtn, SELECTORS.TABLE_ROW);
        core.style.toggleClass(parentRow, CONSTANTS.CLASSES.IS_ACTIVE);
        const renderedTableHeight = renderedTable.offsetHeight; // new height now there's an extra expanded row
        tableContainer.style.height = `${renderedTableHeight + 2}px`;
      }
    }

    /**
     * Open Event
     * Set the expanded attribute to the selected event, used for styling
     *
     * @param {HTMLElement} selectedEventEle - the selected event's HTML <button> element
     */
    openEvent(selectedEventEle) {
      const eventGUID = selectedEventEle.getAttribute('data-event-guid');
      this.updateUrl('event', eventGUID); // Update the URL to include the selected event
      selectedEventEle.setAttribute('data-expanded', 'true');
    }

    /**
     * Close Event
     * Remove the expanded attribute from the selected event
     * Render the loader for the Unit Selector back into the container so when this event is opened again it will appear
     *
     * @param {HTMLElement} selectedEvent - the selected event's HTML <button> element
     */
    closeEvent(selectedEvent) {
      this.updateUrl('event', null); // remove event from URL
      this.updateUrl('unit', null); // remove unit from URL
      this.hideRefreshResultsButton();
      selectedEvent.setAttribute('data-expanded', 'false');
      const unitSelectorContainer = selectedEvent.parentElement.querySelector(SELECTORS.UNIT_SELECTOR_CONTAINER);
      const resultsTableContainer = selectedEvent.parentElement.querySelector(SELECTORS.TABLE_CONTAINER);
      unitSelectorContainer.innerHTML = app.templating.render({
        cssClass: 'results-table__unit-selector-loader'
      }, TEMPLATES.LOADER);
      resultsTableContainer.innerHTML = '';
      resultsTableContainer.style.height = '0px';
      [...this.bracketTabsNav].forEach(element => {
        element.classList.add('u-hide');
      });
      const bracketContainer = selectedEvent.parentElement.querySelectorAll(SELECTORS.TABLE_BRACKETS_TAB_CONTENT);
      [...bracketContainer].forEach((element, index) => {
        index === 1 ? element.classList.add('u-hide') : element.classList.remove('u-hide');
      });
    }

    /**
     * Close All Events
     * Gets all rendered active events and closes them
     */
    closeAllEvents() {
      const eventEles = common.template.nodeListToArray(this.eventsContainer.querySelectorAll(SELECTORS.EVENT));
      const activeEventEles = eventEles.filter(eventEle => eventEle.getAttribute('data-expanded') === 'true');
      activeEventEles.forEach(event => this.closeEvent(event));
    }

    /**
     * Update URL
     * Updates the URL params with the passed key/value pair
     * If no paramValue is passed it is assumed this paramName is to be removed
     *
     * @param {String} paramName - the name/key of the url parameter to update
     * @param {String|Number|null} paramValue - the value used to update
     */
    updateUrl(paramName, paramValue) {
      let params = new URLSearchParams(location.search);
      if (!paramValue) {
        params.delete(paramName);
      } else {
        const urlFriendlyParam = common.url.urlify(paramValue);
        params.set(paramName, urlFriendlyParam);
      }
      const url = `${location.origin}${location.pathname}?${params.toString()}`; // rebuild URL
      history.replaceState({}, '', url);
    }

    /**
     * Create Summary Id
     * Phase summaries do not have a GUID,
     * Create an equivalent to allow us to bind a summary's unit selector button to its data,
     * @param {Object} unit - data for a unit
     * @returns {String} and unique Id for this unit
     */
    createSummaryId(unit) {
      return `${unit.SportCode}_${unit.Name.replace(' ', '-').toLowerCase()}_${unit.PhaseCode}`;
    }

    /**
     * Create Phase Id
     * Units can have the same GUID if they are part of a two-part event
     * Use the UnitCode also attached to the unit data to differentiate them
     *
     * @param {Object} unit - data for a unit
     * @returns {String} and unique Id for this unit
     */
    createPhaseId(unit) {
      return `${unit.PhaseId}_${unit.UnitCode}`;
    }

    /**
     * Show Refresh Results Button
     *
     * Adds click functionality to the expandable table rows to allow them to expand
     *
     * @param {HTMLElement} observedContainer - the rendered unit's table container
     * @param {HTMLElement} selectedEventEle - the selected event's HTML <button> element
     * @param {String} selectedUnit - the name of the selected unit, either from refreshing unit results or directly from the page URL
     */
    showRefreshResultsButton(observedContainer, selectedEventEle, selectedUnit) {
      // Set these up so they can be used in the click handler
      this.selectedEventEle = selectedEventEle;
      this.selectedUnit = selectedUnit;
      this.observedContainer = observedContainer;
      if (this.refreshResultsBtn) {
        const buttonText = this.refreshResultsBtn.querySelector(SELECTORS.TABLE_REFRESH_BUTTON_TEXT);
        if (buttonText) {
          // display a countdown  to when the button will be available again
          clearInterval(this.refreshCountdown);
          this.refreshResultsBtn.classList.add(CONSTANTS.CLASSES.IS_DISABLED);
          let timeToDisplay = REFRESH_RESULTS_DELAY / CONSTANTS.TIME.ONE_SECOND_IN_MS;
          this.refreshCountdown = setInterval(() => {
            timeToDisplay--;
            buttonText.innerHTML = i18n.lookup('label.results.refresh.in', {
              seconds: `${timeToDisplay}`
            });
            if (timeToDisplay <= 0) {
              clearInterval(this.refreshCountdown);
              buttonText.innerHTML = i18n.lookup('label.results.refresh');
              this.refreshResultsBtn.classList.remove(CONSTANTS.CLASSES.IS_DISABLED);
            }
          }, CONSTANTS.TIME.ONE_SECOND_IN_MS);
        }
        if (!this.refreshObserver) {
          this.observer = new IntersectionObserver(entries => {
            const [entry] = entries;
            if (entry.isIntersecting) {
              core.style.addClass(this.refreshResultsBtn, CONSTANTS.CLASSES.IS_ACTIVE);
            } else {
              core.style.removeClass(this.refreshResultsBtn, CONSTANTS.CLASSES.IS_ACTIVE);
            }
          }, {
            rootMargin: '-150px 0px -150px 0px'
          });
        }
        this.observer.observe(observedContainer);
      }
    }

    /**
     * Handle Refresh Button Click
     *
     * Callback for when the refresh button is clicked. Checks it's not
     * disabled then fires of a request to get event data.
     *
     * @param {Event} event - Click event object
     */
    handleRefreshButtonClick(event) {
      const button = event.currentTarget;
      if (core.style.hasClass(button, CONSTANTS.CLASSES.IS_DISABLED)) {
        return;
      }
      if (this.selectedEventEle && this.selectedUnit) {
        this.getEventData(null, this.selectedEventEle, this.selectedUnit);
      }
    }

    /**
     * Hide Refresh Results Button
     *
     * Clears out properties pertaining to the refresh button, hides it by
     * removing the active class and clears any observers and timers running
     */
    hideRefreshResultsButton() {
      this.selectedEventEle = null;
      this.selectedUnit = null;
      if (this.refreshResultsBtn) {
        core.style.removeClass(this.refreshResultsBtn, CONSTANTS.CLASSES.IS_ACTIVE);
      }
      if (this.refreshCountdown) {
        clearInterval(this.refreshCountdown);
      }
      if (this.observer && this.observedContainer) {
        this.observer.unobserve(this.observedContainer);
      }
    }
    resetTabbedContent(element) {
      const tabbedContent = element.parentElement.querySelectorAll(SELECTORS.TABLE_BRACKETS_TAB_CONTENT);
      const tabsNavItem = element.parentElement.querySelectorAll(SELECTORS.TABLE_BRACKETS_TABS_BTN);
      [...tabbedContent].forEach((elm, index) => {
        index === 0 ? elm.classList.remove('u-hide') : elm.classList.add('u-hide');
      });
      [...tabsNavItem].forEach((elm, index) => {
        index === 0 ? elm.classList.add('is-active') : elm.classList.remove('is-active');
      });
    }
    scrollBracketsMobile(element) {
      const navItems = element.parentElement.querySelectorAll('.js-round-nav-link');
      [...navItems].forEach(btn => {
        btn.addEventListener('click', event => {
          event.preventDefault();
          const targetId = btn.dataset.roundShow;
          const targetElement = element.parentElement.querySelector(`#${targetId}`);
          if (targetElement) {
            targetElement.scrollIntoView({
              behavior: 'smooth'
            });
          }
          [...navItems].forEach(btn => {
            btn.classList.remove('is-active');
          });
          btn.classList.add('is-active');
        });
      });
    }
  };
  const _isIE = () => {
    // IE 10 and IE 11
    return /Trident\/|MSIE/.test(window.navigator.userAgent);
  };
  app.widgetInitialiser.addMultipleWidgetsByName('results-table');
})(PULSE.app, PULSE.app.common, PULSE.core, PULSE.app.common.CONSTANTS, PULSE.I18N);
"use strict";

(function (app, common, core, CONSTANTS) {
  'use strict';

  const DELAY = 100;
  const SCROLL_AMOUNT = 300; // px

  /**
   * Unit Selector
   * @param { HTMLElement } container - container Element that widget is instantiated on
   */
  app.UnitSelector = class UnitSelector {
    constructor(container) {
      this.container = container;
      this.unitTotal = Number(this.container.getAttribute('data-unit-total'));
      this.list = this.container.querySelector('.js-unit-selector-list');
      this.backButton = this.container.querySelector('.js-unit-selector-back');
      this.forwardButton = this.container.querySelector('.js-unit-selector-forward');
      this.scrollAmount = 0;
      this.isSlider();
      core.event.windowResize.add({
        method: this.isSlider.bind(this)
      });
    }

    /**
     * Is Slider
     * Checks if the scrolling element can be scrolled, as if there are too few items there's no need for it to be a slider
     * This is also checked on window resize, as this can be different depending on screen width
     */
    isSlider() {
      setTimeout(() => {
        if (this.list.scrollWidth <= this.list.clientWidth) {
          // the list has no overflow, so the slider controls are not required
          this.backButton.classList.remove(CONSTANTS.CLASSES.IS_ACTIVE);
          this.forwardButton.classList.remove(CONSTANTS.CLASSES.IS_ACTIVE);
        } else {
          this.checkButtonActivity();
          this.setListeners();
        }
      }, DELAY);
    }

    /**
     * Set Listeners
     * Sets listeners to the back and forward buttons of the slider
     */
    setListeners() {
      common.addAriaClickListener(this.backButton, this.scrollBack.bind(this));
      common.addAriaClickListener(this.forwardButton, this.scrollForward.bind(this));
      this.list.addEventListener('scroll', this.checkButtonActivity.bind(this));
    }

    /**
     * Providing we're not already at the far left of the container, scroll backwards
     */
    scrollBack() {
      if (this.list.scrollLeft > 0) {
        this.scrollAmount = this.list.scrollLeft - SCROLL_AMOUNT;
        this.list.scrollTo({
          top: 0,
          left: this.scrollAmount,
          behavior: 'smooth'
        });
        this.checkButtonActivity();
      }
    }

    /**
     * Providing there is still scrolling space, scroll forward
     */
    scrollForward() {
      if (this.scrollAmount <= this.list.scrollWidth - this.list.clientWidth) {
        this.scrollAmount = this.list.scrollLeft + SCROLL_AMOUNT;
        this.list.scrollTo({
          top: 0,
          left: this.scrollAmount,
          behavior: 'smooth'
        });
        this.backButton.classList.add(CONSTANTS.CLASSES.IS_ACTIVE); // scrolled forward succesfully so back will always be active

        this.checkButtonActivity();
      }
    }

    /**
     * Handles the logic for whether the scroll forward and back buttons
     * should be visible
     */
    checkButtonActivity() {
      // Scrolled by an amount, so scroll back should but active
      if (this.list.scrollLeft > 0) {
        this.backButton.classList.add(CONSTANTS.CLASSES.IS_ACTIVE);
      } else {
        this.backButton.classList.remove(CONSTANTS.CLASSES.IS_ACTIVE);
      }

      // If not scrolled all the way to the right, forward button should be active
      if (this.list.scrollLeft + this.list.clientWidth < this.list.scrollWidth) {
        this.forwardButton.classList.add(CONSTANTS.CLASSES.IS_ACTIVE);
      } else {
        this.forwardButton.classList.remove(CONSTANTS.CLASSES.IS_ACTIVE);
      }
    }
  };
})(PULSE.app, PULSE.app.common, PULSE.core, PULSE.app.common.CONSTANTS);